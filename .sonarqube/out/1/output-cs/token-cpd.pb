±#
GC:\Users\Adair Hern√°ndez\source\repos\memory\Utilities\MailTemplate.cs
	namespace 	
	Utilities
 
{ 
public 

class 
MailTemplate 
{ 
private 
TextPart 
_message !
;! "
private		 
MimeMessage		 
_content		 $
;		$ %
private

 
MailboxAddress

 
_sender

 &
=

' (
new

) ,
MailboxAddress

- ;
(

; <
$str

< W
,

W X
$str

Y i
)

i j
;

j k
private 
MailboxAddress 
	_receiver (
;( )
private 
string 
_subject 
;  
private 

SmtpClient 
_client "
;" #
public 
MailTemplate 
( 
) 
{ 	
this 
. 
_message 
= 
new 
TextPart  (
(( )
$str) 0
)0 1
;1 2
this 
. 
_content 
= 
new 
MimeMessage  +
(+ ,
), -
;- .
_client 
= 
new 

SmtpClient $
($ %
)% &
;& '
_client 
. 
Connect 
( 
$str ,
,, -
$num. 1
,1 2
false3 8
)8 9
;9 :
_content 
. 
From 
. 
Add 
( 
_sender %
)% &
;& '
_sender 
= 
new 
MailboxAddress (
(( )
$str) 9
,9 :
$str; V
)V W
;W X
_client 
. 
Authenticate  
(  !
$str! <
,< =
$str> N
)N O
;O P
} 	
public 
void 
	SetSender 
( 
string $
name% )
,) *
string+ 1
emailAddress2 >
)> ?
{ 	
this 
. 
_sender 
= 
new 
MailboxAddress -
(- .
name. 2
,2 3
emailAddress4 @
)@ A
;A B
this 
. 
_content 
. 
From 
. 
Add "
(" #
this# '
.' (
_sender( /
)/ 0
;0 1
} 	
public   
void   
SetReceiver   
(    
string    &
name  ' +
,  + ,
string  - 3
emailAddress  4 @
)  @ A
{!! 	
this"" 
."" 
	_receiver"" 
="" 
new""  
MailboxAddress""! /
(""/ 0
name""0 4
,""4 5
emailAddress""6 B
)""B C
;""C D
this## 
.## 
_content## 
.## 
To## 
.## 
Add##  
(##  !
this##! %
.##% &
	_receiver##& /
)##/ 0
;##0 1
}$$ 	
public&& 
void&& 

SetMessage&& 
(&& 
string&& %
subject&&& -
,&&- .
string&&/ 5
message&&6 =
)&&= >
{'' 	
this(( 
.(( 
_message(( 
.(( 
Text(( 
=((  
message((! (
;((( )
this)) 
.)) 
_subject)) 
=)) 
subject)) #
;))# $
this** 
.** 
_content** 
.** 
Body** 
=**  
this**! %
.**% &
_message**& .
;**. /
_content++ 
.++ 
Subject++ 
=++ 
subject++ &
;++& '
},, 	
public.. 
void.. 
Send.. 
(.. 
).. 
{// 	
_client00 
.00 
Send00 
(00 
_content00 !
)00! "
;00" #
_client11 
.11 

Disconnect11 
(11 
true11 #
)11# $
;11$ %
}22 	
}33 
}44 ”	
HC:\Users\Adair Hern√°ndez\source\repos\memory\Utilities\MD5Encryption.cs
	namespace 	
	Utilities
 
{ 
public 

class 
MD5Encryption 
{ 
public		 
static		 
string		 
Encrypt		 $
(		$ %
string		% +
value		, 1
)		1 2
{

 	
using 
( $
MD5CryptoServiceProvider +
md5, /
=0 1
new2 5$
MD5CryptoServiceProvider6 N
(N O
)O P
)P Q
{ 
UTF8Encoding 
utf8 !
=" #
new$ '
UTF8Encoding( 4
(4 5
)5 6
;6 7
byte 
[ 
] 
data 
= 
md5 !
.! "
ComputeHash" -
(- .
utf8. 2
.2 3
GetBytes3 ;
(; <
value< A
)A B
)B C
;C D
return 
Convert 
. 
ToBase64String -
(- .
data. 2
)2 3
;3 4
} 
} 	
} 
} ˝
RC:\Users\Adair Hern√°ndez\source\repos\memory\Utilities\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str $
)$ %
]% &
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str &
)& '
]' (
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *–
IC:\Users\Adair Hern√°ndez\source\repos\memory\Utilities\TokenGenerator.cs
	namespace 	
	Utilities
 
{ 
public 

static 
class 
TokenGenerator &
{ 
public 
static 
string 
GenerateToken *
(* +
int+ .
tokenLength/ :
): ;
{ 	
string		 
token		 
=		 
Guid		 
.		  
NewGuid		  '
(		' (
)		( )
.		) *
ToString		* 2
(		2 3
)		3 4
;		4 5
token

 
=

 
token

 
.

 
Replace

 !
(

! "
$str

" %
,

% &
$str

' )
)

) *
;

* +
token 
= 
token 
. 
	Substring #
(# $
$num$ %
,% &
tokenLength' 2
)2 3
;3 4
return 
token 
; 
} 	
} 
} 