ô
LC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Account.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Account  
{ 
[		 	
System			 
.		 
Diagnostics		 
.		 
CodeAnalysis		 (
.		( )
SuppressMessage		) 8
(		8 9
$str		9 J
,		J K
$str		L ~
)		~ 
]			 Ä
public

 
Account

 
(

 
)

 
{ 	
} 	
[ 	
Key	 
] 
[ 	

ForeignKey	 
( 
$str 
) 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
] 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Salt 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
EmailWasVerified $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	
StringLength	 
( 
$num 
) 
] 
public   
string   
ActivationToken   %
{  & '
get  ( +
;  + ,
set  - 0
;  0 1
}  2 3
["" 	
StringLength""	 
("" 
$num"" 
)"" 
]"" 
public## 
string## 
RecoveryToken## #
{##$ %
get##& )
;##) *
set##+ .
;##. /
}##0 1
public%% 
virtual%% 
Player%% 
Player%% $
{%%% &
get%%' *
;%%* +
set%%, /
;%%/ 0
}%%1 2
}&& 
}'' ¨
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\CardDeck.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
CardDeck !
{ 
[		 	
System			 
.		 
Diagnostics		 
.		 
CodeAnalysis		 (
.		( )
SuppressMessage		) 8
(		8 9
$str		9 J
,		J K
$str		L ~
)		~ 
]			 Ä
public

 
CardDeck

 
(

 
)

 
{ 	
Cards 
= 
new 
HashSet 
<  
Card  $
>$ %
(% &
)& '
;' (
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
string 
	BackImage 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
NumberOfPairs  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL y
)y z
]z {
public 
virtual 
ICollection "
<" #
Card# '
>' (
Cards) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
}!! 
}"" î

IC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Card.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Card 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public		 
int		 
CardId		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str  
)  !
]! "
public 
virtual 
CardDeck 
CardDeck  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[ 	
Required	 
] 
public 
string 

FrontImage  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
}  
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\MemoryGameContext.cs
	namespace 	

DataAccess
 
{ 
public 

partial 
class 
MemoryGameContext *
:+ ,
	DbContext- 6
{ 
public 
MemoryGameContext  
(  !
)! "
:		 
base		 
(		 
$str		 $
)		$ %
{

 	
var 
ensureDllIsCopied !
=" #
System$ *
.* +
Data+ /
./ 0
Entity0 6
.6 7
	SqlServer7 @
.@ A
SqlProviderServicesA T
.T U
InstanceU ]
;] ^
} 	
public 
virtual 
DbSet 
< 
CardDeck %
>% &
	CardDecks' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Card !
>! "
Cards# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 
DbSet 
< 
Match "
>" #
Matches$ +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
Player #
># $
Players% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
virtual 
DbSet 
< 
Account $
>$ %
Accounts& .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
	protected 
override 
void 
OnModelCreating  /
(/ 0
DbModelBuilder0 >
modelBuilder? K
)K L
{ 	
}00 	
}11 
}22 ¯
JC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Match.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Match 
{		 
[

 	
System

	 
.

 
Diagnostics

 
.

 
CodeAnalysis

 (
.

( )
SuppressMessage

) 8
(

8 9
$str

9 J
,

J K
$str

L ~
)

~ 
]	

 Ä
public 
Match 
( 
) 
{ 	
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
MatchId 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str  
)  !
]! "
public 
virtual 
CardDeck 
CardDeck  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	

ForeignKey	 
( 
$str "
)" #
]# $
public 
virtual 
Player 
Winner $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} û

KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Sesion.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

class 
Sesion 
{ 
private 
static 
Sesion 
_playerSesion +
=, -
null. 2
;2 3
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
private		 
Sesion		 
(		 
)		 
{		 
}		 
public

 
static

 
Sesion

 
	GetSesion

 &
{ 	
get 
{ 
if 
( 
_playerSesion !
==" $
null% )
)) *
{ 
_playerSesion !
=" #
new$ '
Sesion( .
(. /
)/ 0
;0 1
} 
return 
_playerSesion $
;$ %
} 
} 	
} 
} Ò
KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Player.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Player 
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public 
Player 
( 
) 
{ 
} 
[

 	
Key

	 
]

 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
Score 
{ 
get 
; 
set  #
;# $
}% &
} 
} ≠L
vC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202101090707155_SetForeignKeysOnMatchExplicitly.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class +
SetForeignKeysOnMatchExplicitly 8
:9 :
DbMigration; F
{ 
public 
override 
void 
Up 
(  
)  !
{		 	
CreateTable

 
(

 
$str 
,  
c 
=> 
new 
{ 

CardDeckId "
=# $
c% &
.& '
Int' *
(* +
nullable+ 3
:3 4
false5 :
,: ;
identity< D
:D E
trueF J
)J K
,K L
Name 
= 
c  
.  !
String! '
(' (
nullable( 0
:0 1
false2 7
,7 8
	maxLength9 B
:B C
$numD G
)G H
,H I
	BackImage !
=" #
c$ %
.% &
String& ,
(, -
nullable- 5
:5 6
false7 <
)< =
,= >
NumberOfPairs %
=& '
c( )
.) *
Int* -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
} 
) 
. 

PrimaryKey 
( 
t 
=>  
t! "
." #

CardDeckId# -
)- .
;. /
CreateTable 
( 
$str 
, 
c 
=> 
new 
{ 
CardId 
=  
c! "
." #
Int# &
(& '
nullable' /
:/ 0
false1 6
,6 7
identity8 @
:@ A
trueB F
)F G
,G H

CardDeckId "
=# $
c% &
.& '
Int' *
(* +
nullable+ 3
:3 4
false5 :
): ;
,; <

FrontImage "
=# $
c% &
.& '
String' -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
} 
) 
. 

PrimaryKey 
( 
t 
=>  
t! "
." #
CardId# )
)) *
. 

ForeignKey 
( 
$str +
,+ ,
t- .
=>/ 1
t2 3
.3 4

CardDeckId4 >
,> ?
cascadeDelete@ M
:M N
trueO S
)S T
. 
Index 
( 
t 
=> 
t 
. 

CardDeckId (
)( )
;) *
CreateTable!! 
(!! 
$str"" 
,"" 
c## 
=>## 
new## 
{$$ 
MatchId%% 
=%%  !
c%%" #
.%%# $
Int%%$ '
(%%' (
nullable%%( 0
:%%0 1
false%%2 7
,%%7 8
identity%%9 A
:%%A B
true%%C G
)%%G H
,%%H I

CardDeckId&& "
=&&# $
c&&% &
.&&& '
Int&&' *
(&&* +
nullable&&+ 3
:&&3 4
false&&5 :
)&&: ;
,&&; <
EmailAddress'' $
=''% &
c''' (
.''( )
String'') /
(''/ 0
	maxLength''0 9
:''9 :
$num''; >
)''> ?
,''? @
}(( 
)(( 
.)) 

PrimaryKey)) 
()) 
t)) 
=>))  
t))! "
.))" #
MatchId))# *
)))* +
.** 

ForeignKey** 
(** 
$str** +
,**+ ,
t**- .
=>**/ 1
t**2 3
.**3 4

CardDeckId**4 >
,**> ?
cascadeDelete**@ M
:**M N
true**O S
)**S T
.++ 

ForeignKey++ 
(++ 
$str++ )
,++) *
t+++ ,
=>++- /
t++0 1
.++1 2
EmailAddress++2 >
)++> ?
.,, 
Index,, 
(,, 
t,, 
=>,, 
t,, 
.,, 

CardDeckId,, (
),,( )
.-- 
Index-- 
(-- 
t-- 
=>-- 
t-- 
.-- 
EmailAddress-- *
)--* +
;--+ ,
CreateTable// 
(// 
$str00 
,00 
c11 
=>11 
new11 
{22 
EmailAddress33 $
=33% &
c33' (
.33( )
String33) /
(33/ 0
nullable330 8
:338 9
false33: ?
,33? @
	maxLength33A J
:33J K
$num33L O
)33O P
,33P Q
Score44 
=44 
c44  !
.44! "
Int44" %
(44% &
nullable44& .
:44. /
false440 5
)445 6
,446 7
}55 
)55 
.66 

PrimaryKey66 
(66 
t66 
=>66  
t66! "
.66" #
EmailAddress66# /
)66/ 0
.77 

ForeignKey77 
(77 
$str77 *
,77* +
t77, -
=>77. 0
t771 2
.772 3
EmailAddress773 ?
)77? @
.88 
Index88 
(88 
t88 
=>88 
t88 
.88 
EmailAddress88 *
)88* +
;88+ ,
CreateTable:: 
(:: 
$str;; 
,;; 
c<< 
=><< 
new<< 
{== 
EmailAddress>> $
=>>% &
c>>' (
.>>( )
String>>) /
(>>/ 0
nullable>>0 8
:>>8 9
false>>: ?
,>>? @
	maxLength>>A J
:>>J K
$num>>L O
)>>O P
,>>P Q
Username??  
=??! "
c??# $
.??$ %
String??% +
(??+ ,
nullable??, 4
:??4 5
false??6 ;
)??; <
,??< =
Password@@  
=@@! "
c@@# $
.@@$ %
String@@% +
(@@+ ,
nullable@@, 4
:@@4 5
false@@6 ;
,@@; <
	maxLength@@= F
:@@F G
$num@@H K
)@@K L
,@@L M
SaltAA 
=AA 
cAA  
.AA  !
StringAA! '
(AA' (
	maxLengthAA( 1
:AA1 2
$numAA3 6
)AA6 7
,AA7 8
EmailWasVerifiedBB (
=BB) *
cBB+ ,
.BB, -
BooleanBB- 4
(BB4 5
nullableBB5 =
:BB= >
falseBB? D
)BBD E
,BBE F
ActivationTokenCC '
=CC( )
cCC* +
.CC+ ,
StringCC, 2
(CC2 3
	maxLengthCC3 <
:CC< =
$numCC> @
)CC@ A
,CCA B
RecoveryTokenDD %
=DD& '
cDD( )
.DD) *
StringDD* 0
(DD0 1
	maxLengthDD1 :
:DD: ;
$numDD< >
)DD> ?
,DD? @
}EE 
)EE 
.FF 

PrimaryKeyFF 
(FF 
tFF 
=>FF  
tFF! "
.FF" #
EmailAddressFF# /
)FF/ 0
;FF0 1
}HH 	
publicJJ 
overrideJJ 
voidJJ 
DownJJ !
(JJ! "
)JJ" #
{KK 	
DropForeignKeyLL 
(LL 
$strLL (
,LL( )
$strLL* 8
,LL8 9
$strLL: G
)LLG H
;LLH I
DropForeignKeyMM 
(MM 
$strMM (
,MM( )
$strMM* 8
,MM8 9
$strMM: H
)MMH I
;MMI J
DropForeignKeyNN 
(NN 
$strNN (
,NN( )
$strNN* 6
,NN6 7
$strNN8 G
)NNG H
;NNH I
DropForeignKeyOO 
(OO 
$strOO &
,OO& '
$strOO( 4
,OO4 5
$strOO6 E
)OOE F
;OOF G
	DropIndexPP 
(PP 
$strPP #
,PP# $
newPP% (
[PP( )
]PP) *
{PP+ ,
$strPP- ;
}PP< =
)PP= >
;PP> ?
	DropIndexQQ 
(QQ 
$strQQ #
,QQ# $
newQQ% (
[QQ( )
]QQ) *
{QQ+ ,
$strQQ- ;
}QQ< =
)QQ= >
;QQ> ?
	DropIndexRR 
(RR 
$strRR #
,RR# $
newRR% (
[RR( )
]RR) *
{RR+ ,
$strRR- 9
}RR: ;
)RR; <
;RR< =
	DropIndexSS 
(SS 
$strSS !
,SS! "
newSS# &
[SS& '
]SS' (
{SS) *
$strSS+ 7
}SS8 9
)SS9 :
;SS: ;
	DropTableTT 
(TT 
$strTT $
)TT$ %
;TT% &
	DropTableUU 
(UU 
$strUU #
)UU# $
;UU$ %
	DropTableVV 
(VV 
$strVV #
)VV# $
;VV$ %
	DropTableWW 
(WW 
$strWW !
)WW! "
;WW" #
	DropTableXX 
(XX 
$strXX %
)XX% &
;XX& '
}YY 	
}ZZ 
}[[ õ1
{C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202101090917339_AddedNavigabilityFromAccountToPlayer.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class 0
$AddedNavigabilityFromAccountToPlayer =
:> ?
DbMigration@ K
{ 
public 
override 
void 
Up 
(  
)  !
{		 	
DropForeignKey

 
(

 
$str

 (
,

( )
$str

* 8
,

8 9
$str

: G
)

G H
;

H I
DropForeignKey 
( 
$str (
,( )
$str* 8
,8 9
$str: H
)H I
;I J
	DropIndex 
( 
$str #
,# $
new% (
[( )
]) *
{+ ,
$str- ;
}< =
)= >
;> ?
	DropIndex 
( 
$str #
,# $
new% (
[( )
]) *
{+ ,
$str- ;
}< =
)= >
;> ?
DropPrimaryKey 
( 
$str (
)( )
;) *
DropPrimaryKey 
( 
$str )
)) *
;* +
AlterColumn 
( 
$str %
,% &
$str' 5
,5 6
c7 8
=>9 ;
c< =
.= >
String> D
(D E
	maxLengthE N
:N O
$numP S
)S T
)T U
;U V
AlterColumn 
( 
$str %
,% &
$str' 5
,5 6
c7 8
=>9 ;
c< =
.= >
String> D
(D E
nullableE M
:M N
falseO T
,T U
	maxLengthV _
:_ `
$numa d
)d e
)e f
;f g
AlterColumn 
( 
$str &
,& '
$str( 6
,6 7
c8 9
=>: <
c= >
.> ?
String? E
(E F
nullableF N
:N O
falseP U
,U V
	maxLengthW `
:` a
$numb e
)e f
)f g
;g h
AddPrimaryKey 
( 
$str '
,' (
$str) 7
)7 8
;8 9
AddPrimaryKey 
( 
$str (
,( )
$str* 8
)8 9
;9 :
CreateIndex 
( 
$str &
,& '
$str( 6
)6 7
;7 8
CreateIndex 
( 
$str %
,% &
$str' 5
)5 6
;6 7
AddForeignKey 
( 
$str (
,( )
$str* 8
,8 9
$str: G
,G H
$strI W
)W X
;X Y
AddForeignKey 
( 
$str '
,' (
$str) 7
,7 8
$str9 F
,F G
$strH V
)V W
;W X
} 	
public 
override 
void 
Down !
(! "
)" #
{ 	
DropForeignKey 
( 
$str (
,( )
$str* 8
,8 9
$str: G
)G H
;H I
DropForeignKey 
( 
$str )
,) *
$str+ 9
,9 :
$str; H
)H I
;I J
	DropIndex 
( 
$str #
,# $
new% (
[( )
]) *
{+ ,
$str- ;
}< =
)= >
;> ?
	DropIndex   
(   
$str   $
,  $ %
new  & )
[  ) *
]  * +
{  , -
$str  . <
}  = >
)  > ?
;  ? @
DropPrimaryKey!! 
(!! 
$str!! )
)!!) *
;!!* +
DropPrimaryKey"" 
("" 
$str"" (
)""( )
;"") *
AlterColumn## 
(## 
$str## &
,##& '
$str##( 6
,##6 7
c##8 9
=>##: <
c##= >
.##> ?
String##? E
(##E F
nullable##F N
:##N O
false##P U
,##U V
	maxLength##W `
:##` a
$num##b e
)##e f
)##f g
;##g h
AlterColumn$$ 
($$ 
$str$$ %
,$$% &
$str$$' 5
,$$5 6
c$$7 8
=>$$9 ;
c$$< =
.$$= >
String$$> D
($$D E
nullable$$E M
:$$M N
false$$O T
,$$T U
	maxLength$$V _
:$$_ `
$num$$a d
)$$d e
)$$e f
;$$f g
AlterColumn%% 
(%% 
$str%% %
,%%% &
$str%%' 5
,%%5 6
c%%7 8
=>%%9 ;
c%%< =
.%%= >
String%%> D
(%%D E
	maxLength%%E N
:%%N O
$num%%P S
)%%S T
)%%T U
;%%U V
AddPrimaryKey&& 
(&& 
$str&& (
,&&( )
$str&&* 8
)&&8 9
;&&9 :
AddPrimaryKey'' 
('' 
$str'' '
,''' (
$str'') 7
)''7 8
;''8 9
CreateIndex(( 
((( 
$str(( %
,((% &
$str((' 5
)((5 6
;((6 7
CreateIndex)) 
()) 
$str)) %
,))% &
$str))' 5
)))5 6
;))6 7
AddForeignKey** 
(** 
$str** '
,**' (
$str**) 7
,**7 8
$str**9 G
,**G H
$str**I W
)**W X
;**X Y
AddForeignKey++ 
(++ 
$str++ '
,++' (
$str++) 7
,++7 8
$str++9 F
,++F G
$str++H V
)++V W
;++W X
},, 	
}-- 
}.. •
uC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202101092235309_RemoveVirtualAccountFromPlayer.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class *
RemoveVirtualAccountFromPlayer 7
:8 9
DbMigration: E
{ 
public 
override 
void 
Up 
(  
)  !
{		 	
}

 	
public 
override 
void 
Down !
(! "
)" #
{ 	
} 	
} 
} ∞
gC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202101100503290_AddedDateToMatch.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class 
AddedDateToMatch )
:* +
DbMigration, 7
{ 
public 
override 
void 
Up 
(  
)  !
{		 	
	AddColumn

 
(

 
$str

 #
,

# $
$str

% +
,

+ ,
c

- .
=>

/ 1
c

2 3
.

3 4
DateTime

4 <
(

< =
nullable

= E
:

E F
false

G L
)

L M
)

M N
;

N O
} 	
public 
override 
void 
Down !
(! "
)" #
{ 	

DropColumn 
( 
$str $
,$ %
$str& ,
), -
;- .
} 	
} 
} ∑(
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\Configuration.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
internal 
sealed 
class 
Configuration '
:( )%
DbMigrationsConfiguration* C
<C D

DataAccessD N
.N O
MemoryGameContextO `
>` a
{ 
public 
Configuration 
( 
) 
{		 	&
AutomaticMigrationsEnabled

 &
=

' (
false

) .
;

. /
} 	
	protected 
override 
void 
Seed  $
($ %

DataAccess% /
./ 0
MemoryGameContext0 A
contextB I
)I J
{ 	
context;; 
.;; 
	CardDecks;; 
.;; 
AddOrUpdate;; )
(;;) *
x;;* +
=>;;, .
x;;/ 0
.;;0 1

CardDeckId;;1 ;
,;;; <
new<< 
CardDeck<< 
(<< 
)<< 
{== 

CardDeckId>> 
=>>  
$num>>! "
,>>" #
Name?? 
=?? 
$str?? -
,??- .
	BackImage@@ 
=@@ 
$str@@  l
,@@l m
NumberOfPairsAA !
=AA" #
$numAA$ &
,AA& '
}BB 
)CC 
;CC 
contextEE 
.EE 
CardsEE 
.EE 
AddOrUpdateEE %
(EE% &
xEE& '
=>EE( *
xEE+ ,
.EE, -
CardIdEE- 3
,EE3 4
newFF 
CardFF 
(FF 
)FF 
{GG 
CardIdHH 
=HH 
$numHH 
,HH 

FrontImageII 
=II  
$strII! l
,IIl m

CardDeckIdJJ 
=JJ  
$numJJ! "
}KK 
,KK 
newLL 
CardLL 
(LL 
)LL 
{MM 
CardIdNN 
=NN 
$numNN 
,NN 

FrontImageOO 
=OO  
$strOO! l
,OOl m

CardDeckIdPP 
=PP  
$numPP! "
}QQ 
,QQ 
newRR 
CardRR 
(RR 
)RR 
{SS 
CardIdTT 
=TT 
$numTT 
,TT 

FrontImageUU 
=UU  
$strUU! l
,UUl m

CardDeckIdVV 
=VV  
$numVV! "
}WW 
,WW 
newXX 
CardXX 
(XX 
)XX 
{YY 
CardIdZZ 
=ZZ 
$numZZ 
,ZZ 

FrontImage[[ 
=[[  
$str[[! l
,[[l m

CardDeckId\\ 
=\\  
$num\\! "
}]] 
,]] 
new^^ 
Card^^ 
(^^ 
)^^ 
{__ 
CardId`` 
=`` 
$num`` 
,`` 

FrontImageaa 
=aa  
$straa! l
,aal m

CardDeckIdbb 
=bb  
$numbb! "
}cc 
,cc 
newdd 
Carddd 
(dd 
)dd 
{ee 
CardIdff 
=ff 
$numff 
,ff 

FrontImagegg 
=gg  
$strgg! l
,ggl m

CardDeckIdhh 
=hh  
$numhh! "
}ii 
,ii 
newjj 
Cardjj 
(jj 
)jj 
{kk 
CardIdll 
=ll 
$numll 
,ll 

FrontImagemm 
=mm  
$strmm! l
,mml m

CardDeckIdnn 
=nn  
$numnn! "
}oo 
,oo 
newpp 
Cardpp 
(pp 
)pp 
{qq 
CardIdrr 
=rr 
$numrr 
,rr 

FrontImagess 
=ss  
$strss! l
,ssl m

CardDeckIdtt 
=tt  
$numtt! "
}uu 
,uu 
newvv 
Cardvv 
(vv 
)vv 
{ww 
CardIdxx 
=xx 
$numxx 
,xx 

FrontImageyy 
=yy  
$stryy! l
,yyl m

CardDeckIdzz 
=zz  
$numzz! "
}{{ 
,{{ 
new|| 
Card|| 
(|| 
)|| 
{}} 
CardId~~ 
=~~ 
$num~~ 
,~~  

FrontImage 
=  
$str! m
,m n

CardDeckId
ÄÄ 
=
ÄÄ  
$num
ÄÄ! "
}
ÅÅ 
,
ÅÅ 
new
ÇÇ 
Card
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
CardId
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
,
ÑÑ  

FrontImage
ÖÖ 
=
ÖÖ  
$str
ÖÖ! m
,
ÖÖm n

CardDeckId
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
}
áá 
)
àà 
;
àà 
}
éé 	
}
èè 
}êê ˛
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *¿
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\AccountRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
AccountRepository "
:# $

Repository% /
</ 0
Account0 7
>7 8
,8 9
IAccountRepository: L
{		 
public

 
MemoryGameContext

  
MemoryGameContext

! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
AccountRepository  
(  !
	DbContext! *
context+ 2
)2 3
:4 5
base6 :
(: ;
context; B
)B C
{D E
}F G
public 
Account $
GetAccountWithPlayerInfo /
(/ 0
string0 6
username7 ?
)? @
{ 	

IQueryable 
< 
Account 
> 
accountsRetrieved  1
=2 3
MemoryGameContext4 E
.E F
AccountsF N
.N O
WhereO T
(T U
accountU \
=>] _
account` g
.g h
Usernameh p
==q s
usernamet |
)| }
;} ~
if 
( 
accountsRetrieved !
.! "
Count" '
(' (
)( )
==* ,
$num- .
). /
{ 
Account 
account 
=  !
accountsRetrieved" 3
.3 4
First4 9
(9 :
): ;
;; <
return 
account 
; 
} 
return 
null 
; 
} 	
public 
IEnumerable 
< 
Account "
>" #-
!GetNumberOfAccountsWithPlayerInfo$ E
(E F
intF I)
numberOfAccountsToBeRetrievedJ g
)g h
{   	
IEnumerable!! 
<!! 
Account!! 
>!!  
accounts!!! )
=!!* +
new!!, /
List!!0 4
<!!4 5
Account!!5 <
>!!< =
(!!= >
)!!> ?
;!!? @
IEnumerable"" 
<"" 
Account"" 
>""  
accountsRetrieved""! 2
=""3 4
MemoryGameContext""5 F
.""F G
Accounts""G O
.""O P
Include""P W
(""W X
$str""X `
)""` a
;""a b
if## 
(## 
accountsRetrieved##  
!=##! #
null##$ (
)##( )
{$$ 
accounts%% 
=%% 
accountsRetrieved%% ,
.%%, -
OrderByDescending%%- >
(%%> ?
account%%? F
=>%%G I
account%%J Q
.%%Q R
Player%%R X
.%%X Y
Score%%Y ^
)%%^ _
.&& 
Take&& 
(&& )
numberOfAccountsToBeRetrieved&& 7
)&&7 8
;&&8 9
}'' 
return(( 
accounts(( 
;(( 
})) 	
}** 
}++ ø
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\CardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public		 

class		 
CardDeckRepository		 #
:		$ %

Repository		& 0
<		0 1
CardDeck		1 9
>		9 :
,		: ;
ICardDeckRepository		< O
{

 
public 
MemoryGameContext  
MemoryGameContext! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
CardDeckRepository !
(! "
	DbContext" +
context, 3
)3 4
:5 6
base7 ;
(; <
context< C
)C D
{E F
}G H
public 
CardDeck 
GetCardDeckAndCards +
(+ ,
int, /

cardDeckId0 :
): ;
{ 	
IEnumerable 
< 
CardDeck  
>  !
cardDecksRetrieved" 4
=5 6
MemoryGameContext7 H
.H I
	CardDecksI R
.R S
IncludeS Z
(Z [
$str[ b
)b c
. 
Where 
( 
cardDeck 
=>  "
cardDeck# +
.+ ,

CardDeckId, 6
==7 9

cardDeckId: D
)D E
;E F
if 
( 
cardDecksRetrieved "
." #
Any# &
(& '
)' (
)( )
{ 
CardDeck )
cardDeckRetrievedFromDatabase 6
=7 8
cardDecksRetrieved9 K
.K L
FirstL Q
(Q R
)R S
;S T
return )
cardDeckRetrievedFromDatabase 4
;4 5
} 
return 
null 
; 
} 	
}!! 
}"" á
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IAccountRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IAccountRepository '
:( )
IRepository* 5
<5 6
Account6 =
>= >
{ 
Account $
GetAccountWithPlayerInfo (
(( )
string) /
username0 8
)8 9
;9 :
IEnumerable		 
<		 
Account		 
>		 -
!GetNumberOfAccountsWithPlayerInfo		 >
(		> ?
int		? B)
numberOfAccountsToBeRetrieved		C `
)		` a
;		a b
}

 
} °
\C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\ICardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
ICardDeckRepository (
:) *
IRepository+ 6
<6 7
CardDeck7 ?
>? @
{ 
CardDeck 
GetCardDeckAndCards $
($ %
int% (

cardDeckId) 3
)3 4
;4 5
} 
}		 Ö
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IPlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IPlayerRepository &
:' (
IRepository) 4
<4 5
Entities5 =
.= >
Player> D
>D E
{ 
IEnumerable		 
<		 
Entities		 
.		 
Player		 #
>		# $#
GetPlayersWithBestScore		% <
(		< =
int		= @(
numberOfPlayersToBeRetrieved		A ]
)		] ^
;		^ _
void

 *
UpdateScoreOfPlayersAfterMatch

 +
(

+ ,
string

, 2
username

3 ;
,

; <
int

= @
score

A F
)

F G
;

G H
Player  
FindPlayerByUsername #
(# $
string$ *
username+ 3
)3 4
;4 5
} 
} ˆ
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IRepository  
<  !
TEntity! (
>( )
where* /
TEntity0 7
:8 9
class: ?
{ 
TEntity 
Get 
( 
object 
id 
) 
; 
IEnumerable		 
<		 
TEntity		 
>		 
GetAll		 #
(		# $
)		$ %
;		% &
IEnumerable

 
<

 
TEntity

 
>

 
Find

 !
(

! "
Func

" &
<

& '
TEntity

' .
,

. /
bool

0 4
>

4 5
	predicate

6 ?
)

? @
;

@ A
TEntity 
FindFirstOccurence "
(" #
Func# '
<' (
TEntity( /
,/ 0
bool1 5
>5 6
	predicate7 @
)@ A
;A B
void 
Add 
( 
TEntity 
entity 
)  
;  !
void 
AddRange 
( 
IEnumerable !
<! "
TEntity" )
>) *
entities+ 3
)3 4
;4 5
void 
Remove 
( 
TEntity 
entity "
)" #
;# $
void 
RemoveRange 
( 
IEnumerable $
<$ %
TEntity% ,
>, -
entities. 6
)6 7
;7 8
} 
} Î$
YC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\PlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
PlayerRepository !
:" #

Repository$ .
<. /
Player/ 5
>5 6
,6 7
IPlayerRepository8 I
{		 
public

 
MemoryGameContext

  
MemoryGameContext

! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
PlayerRepository 
(  
MemoryGameContext  1
context2 9
)9 :
:: ;
base; ?
(? @
context@ G
)G H
{I J
}K L
public 
IEnumerable 
< 
Player !
>! "#
GetPlayersWithBestScore# :
(: ;
int; >(
numberOfPlayersToBeRetrieved? [
)[ \
{ 	
IEnumerable 
< 
Player 
> 
players  '
=( )
new* -
List. 2
<2 3
Player3 9
>9 :
(: ;
); <
;< =
var 
playersRetrieved  
=! "
MemoryGameContext# 4
.4 5
Players5 <
. 
Include 
( 
$str "
)" #
;# $
if 
( 
playersRetrieved 
!=  "
null# '
)' (
{ 
players 
= 
playersRetrieved *
.* +
OrderByDescending+ <
(< =
player= C
=>D F
playerG M
.M N
ScoreN S
)S T
. 
Take 
( (
numberOfPlayersToBeRetrieved 2
)2 3
;3 4
} 
return 
players 
; 
} 	
public!! 
void!! *
UpdateScoreOfPlayersAfterMatch!! 2
(!!2 3
string!!3 9
username!!: B
,!!B C
int!!D G
score!!H M
)!!M N
{"" 	
IEnumerable## 
<## 
Account## 
>##  
retrievedAccounts##! 2
=##3 4
MemoryGameContext##5 F
.##F G
Accounts##G O
.##O P
Include##P W
(##W X
$str##X `
)##` a
.$$ 
Where$$ 
($$ 
account$$ 
=>$$ !
account$$" )
.$$) *
Username$$* 2
==$$3 5
username$$6 >
)$$> ?
;$$? @
if%% 
(%% 
retrievedAccounts%% !
.%%! "
Count%%" '
(%%' (
)%%( )
==%%* ,
$num%%- .
)%%. /
{%%/ 0
Account&& 
account&& 
=&&  !
retrievedAccounts&&" 3
.&&3 4
First&&4 9
(&&9 :
)&&: ;
;&&; <
Player'' 
player'' 
='' 
account''  '
.''' (
Player''( .
;''. /
player(( 
.(( 
Score(( 
+=(( 
score((  %
;((% &
})) 
}** 	
public,, 
Player,,  
FindPlayerByUsername,, *
(,,* +
string,,+ 1
username,,2 :
),,: ;
{-- 	
IEnumerable.. 
<.. 
Account.. 
>..  
retrievedAccounts..! 2
=..3 4
MemoryGameContext..5 F
...F G
Accounts..G O
...O P
Include..P W
(..W X
$str..X `
)..` a
.// 
Where// 
(// 
account// 
=>// !
account//" )
.//) *
Username//* 2
==//3 5
username//6 >
)//> ?
;//? @
if00 
(00 
retrievedAccounts00  
.00  !
Count00! &
(00& '
)00' (
==00) +
$num00, -
)00- .
{11 
Account22 
account22 
=22  !
retrievedAccounts22" 3
.223 4
First224 9
(229 :
)22: ;
;22; <
return33 
account33 
.33 
Player33 %
;33% &
}44 
return55 
null55 
;55 
}66 	
}77 
}88 ó/
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\Repository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 

Repository 
< 
TEntity #
># $
:% &
IRepository' 2
<2 3
TEntity3 :
>: ;
where		 
TEntity		 
:		 
class		 
{

 
	protected 
readonly 
	DbContext $
_context% -
;- .
public 

Repository 
( 
	DbContext #
context$ +
)+ ,
{ 	
_context 
= 
context 
; 
} 	
public 
TEntity 
Get 
( 
object !
id" $
)$ %
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
Find+ /
(/ 0
id0 2
)2 3
;3 4
} 	
public 
IEnumerable 
< 
TEntity "
>" #
GetAll$ *
(* +
)+ ,
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
ToList+ 1
(1 2
)2 3
;3 4
} 	
public 
IEnumerable 
< 
TEntity "
>" #
Find$ (
(( )
Func) -
<- .
TEntity. 5
,5 6
bool7 ;
>; <
	predicate= F
)F G
{ 	
IEnumerable 
< 
TEntity 
>  
matchingResults! 0
=1 2
new3 6
List7 ;
<; <
TEntity< C
>C D
(D E
)E F
;F G
if 
( 
	predicate 
!= 
null !
)! "
{ 
matchingResults   
=    !
_context  " *
.  * +
Set  + .
<  . /
TEntity  / 6
>  6 7
(  7 8
)  8 9
.  9 :
Where  : ?
(  ? @
	predicate  @ I
)  I J
;  J K
}!! 
return"" 
matchingResults"" "
;""" #
}## 	
public%% 
TEntity%% 
FindFirstOccurence%% )
(%%) *
Func%%* .
<%%. /
TEntity%%/ 6
,%%6 7
bool%%8 <
>%%< =
	predicate%%> G
)%%G H
{&& 	
IEnumerable'' 
<'' 
TEntity'' 
>''  
results''! (
='') *
_context''+ 3
.''3 4
Set''4 7
<''7 8
TEntity''8 ?
>''? @
(''@ A
)''A B
.''B C
Where''C H
(''H I
	predicate''I R
)''R S
;''S T
if(( 
((( 
results(( 
.(( 
Any(( 
((( 
)(( 
)(( 
{)) 
return** 
results** 
.** 
First** $
(**$ %
)**% &
;**& '
}++ 
return,, 
null,, 
;,, 
}-- 	
public// 
void// 
Add// 
(// 
TEntity// 
entity//  &
)//& '
{00 	
if11 
(11 
entity11 
!=11 
null11 
)11 
{22 
_context33 
.33 
Set33 
<33 
TEntity33 $
>33$ %
(33% &
)33& '
.33' (
Add33( +
(33+ ,
entity33, 2
)332 3
;333 4
}44 
}55 	
public77 
void77 
AddRange77 
(77 
IEnumerable77 (
<77( )
TEntity77) 0
>770 1
entities772 :
)77: ;
{88 	
if99 
(99 
entities99 
!=99 
null99 
&&99  "
entities99# +
.99+ ,
Any99, /
(99/ 0
)990 1
)991 2
{:: 
_context;; 
.;; 
Set;; 
<;; 
TEntity;; $
>;;$ %
(;;% &
);;& '
.;;' (
AddRange;;( 0
(;;0 1
entities;;1 9
);;9 :
;;;: ;
}<< 
}== 	
public?? 
void?? 
Remove?? 
(?? 
TEntity?? "
entity??# )
)??) *
{@@ 	
ifAA 
(AA 
entityAA 
!=AA 
nullAA 
)AA 
{BB 
_contextCC 
.CC 
SetCC 
<CC 
TEntityCC $
>CC$ %
(CC% &
)CC& '
.CC' (
RemoveCC( .
(CC. /
entityCC/ 5
)CC5 6
;CC6 7
}DD 
}EE 	
publicGG 
voidGG 
RemoveRangeGG 
(GG  
IEnumerableGG  +
<GG+ ,
TEntityGG, 3
>GG3 4
entitiesGG5 =
)GG= >
{HH 	
ifII 
(II 
entitiesII 
!=II 
nullII 
&&II  "
entitiesII# +
.II+ ,
AnyII, /
(II/ 0
)II0 1
)II1 2
{JJ 
_contextKK 
.KK 
SetKK 
<KK 
TEntityKK $
>KK$ %
(KK% &
)KK& '
.KK' (
RemoveRangeKK( 3
(KK3 4
entitiesKK4 <
)KK< =
;KK= >
}LL 
}MM 	
}NN 
}OO ü
UC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\IUnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 
IPlayerRepository		 
Players		 !
{		" #
get		$ '
;		' (
}		) *
ICardDeckRepository

 
	CardDecks

 %
{

& '
get

( +
;

+ ,
}

- .
IRepository 
< 
Match 
> 
Matches "
{# $
get% (
;( )
}* +
IAccountRepository 
Accounts #
{$ %
get& )
;) *
}+ ,
int 
Complete 
( 
) 
; 
} 
} ö
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\UnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly 
MemoryGameContext *
_context+ 3
;3 4
public		 
IPlayerRepository		  
Players		! (
{		) *
get		+ .
;		. /
private		0 7
set		8 ;
;		; <
}		= >
public

 
ICardDeckRepository

 "
	CardDecks

# ,
{

- .
get

/ 2
;

2 3
private

4 ;
set

< ?
;

? @
}

A B
public 
IRepository 
< 
Match  
>  !
Matches" )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public 
IAccountRepository !
Accounts" *
{+ ,
get- 0
;0 1
private2 9
set: =
;= >
}? @
public 

UnitOfWork 
( 
MemoryGameContext +
context, 3
)3 4
{ 	
_context 
= 
context 
; 
Players 
= 
new 
PlayerRepository *
(* +
_context+ 3
)3 4
;4 5
	CardDecks 
= 
new 
CardDeckRepository .
(. /
_context/ 7
)7 8
;8 9
Matches 
= 
new 

Repository $
<$ %
Match% *
>* +
(+ ,
_context, 4
)4 5
;5 6
Accounts 
= 
new 
AccountRepository ,
(, -
_context- 5
)5 6
;6 7
} 	
public 
int 
Complete 
( 
) 
{ 	
return 
_context 
. 
SaveChanges '
(' (
)( )
;) *
} 	
public 
void 
Dispose 
( 
) 
{ 	
_context   
.   
Dispose   
(   
)   
;   
}!! 	
}"" 
}## 