ô
LC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Account.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public

 

partial

 
class

 
Account

  
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public 
Account 
( 
) 
{ 	
} 	
[ 	
Key	 
] 
[ 	

ForeignKey	 
( 
$str 
) 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
] 
public   
string   
Username   
{    
get  ! $
;  $ %
set  & )
;  ) *
}  + ,
[%% 	
Required%%	 
]%% 
[&& 	
StringLength&&	 
(&& 
$num&& 
)&& 
]&& 
public'' 
string'' 
Password'' 
{''  
get''! $
;''$ %
set''& )
;'') *
}''+ ,
[,, 	
StringLength,,	 
(,, 
$num,, 
),, 
],, 
public-- 
string-- 
Salt-- 
{-- 
get--  
;--  !
set--" %
;--% &
}--' (
public22 
bool22 
EmailWasVerified22 $
{22% &
get22' *
;22* +
set22, /
;22/ 0
}221 2
[77 	
StringLength77	 
(77 
$num77 
)77 
]77 
public88 
string88 
ActivationToken88 %
{88& '
get88( +
;88+ ,
set88- 0
;880 1
}882 3
[== 	
StringLength==	 
(== 
$num== 
)== 
]== 
public>> 
string>> 
RecoveryToken>> #
{>>$ %
get>>& )
;>>) *
set>>+ .
;>>. /
}>>0 1
publicCC 
virtualCC 
PlayerCC 
PlayerCC $
{CC% &
getCC' *
;CC* +
setCC, /
;CC/ 0
}CC1 2
}DD 
}EE ¨
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\CardDeck.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
CardDeck !
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public 
CardDeck 
( 
) 
{ 	
Cards 
= 
new 
HashSet 
<  
Card  $
>$ %
(% &
)& '
;' (
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[   	
Required  	 
]   
[!! 	
StringLength!!	 
(!! 
$num!! 
)!! 
]!! 
public"" 
string"" 
Name"" 
{"" 
get""  
;""  !
set""" %
;""% &
}""' (
['' 	
Required''	 
]'' 
public(( 
string(( 
	BackImage(( 
{((  !
get((" %
;((% &
set((' *
;((* +
}((, -
public-- 
int-- 
NumberOfPairs--  
{--! "
get--# &
;--& '
set--( +
;--+ ,
}--- .
[22 	
System22	 
.22 
Diagnostics22 
.22 
CodeAnalysis22 (
.22( )
SuppressMessage22) 8
(228 9
$str229 J
,22J K
$str22L y
)22y z
]22z {
public33 
virtual33 
ICollection33 "
<33" #
Card33# '
>33' (
Cards33) .
{33/ 0
get331 4
;334 5
set336 9
;339 :
}33; <
}44 
}55 î

IC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Card.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public

 

partial

 
class

 
Card

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
CardId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str  
)  !
]! "
public 
virtual 
CardDeck 
CardDeck  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[!! 	
Required!!	 
]!! 
public"" 
string"" 

FrontImage""  
{""! "
get""# &
;""& '
set""( +
;""+ ,
}""- .
}## 
}$$ ¸
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\MemoryGameContext.cs
	namespace 	

DataAccess
 
{ 
public

 

partial

 
class

 
MemoryGameContext

 *
:

+ ,
	DbContext

- 6
{ 
public 
MemoryGameContext  
(  !
)! "
: 
base 
( 
$str $
)$ %
{ 	
var 
ensureDllIsCopied !
=" #
System$ *
.* +
Data+ /
./ 0
Entity0 6
.6 7
	SqlServer7 @
.@ A
SqlProviderServicesA T
.T U
InstanceU ]
;] ^
} 	
public 
virtual 
DbSet 
< 
CardDeck %
>% &
	CardDecks' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Card !
>! "
Cards# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public   
virtual   
DbSet   
<   
Match   "
>  " #
Matches  $ +
{  , -
get  . 1
;  1 2
set  3 6
;  6 7
}  8 9
public$$ 
virtual$$ 
DbSet$$ 
<$$ 
Player$$ #
>$$# $
Players$$% ,
{$$- .
get$$/ 2
;$$2 3
set$$4 7
;$$7 8
}$$9 :
public(( 
virtual(( 
DbSet(( 
<(( 
Account(( $
>(($ %
Accounts((& .
{((/ 0
get((1 4
;((4 5
set((6 9
;((9 :
}((; <
})) 
}** ¯
JC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Match.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Match 
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public 
Match 
( 
) 
{ 	
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
MatchId 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public$$ 
int$$ 

CardDeckId$$ 
{$$ 
get$$  #
;$$# $
set$$% (
;$$( )
}$$* +
[)) 	

ForeignKey))	 
()) 
$str))  
)))  !
]))! "
public** 
virtual** 
CardDeck** 
CardDeck**  (
{**) *
get**+ .
;**. /
set**0 3
;**3 4
}**5 6
public// 
string// 
EmailAddress// "
{//# $
get//% (
;//( )
set//* -
;//- .
}/// 0
[44 	

ForeignKey44	 
(44 
$str44 "
)44" #
]44# $
public55 
virtual55 
Player55 
Winner55 $
{55% &
get55' *
;55* +
set55, /
;55/ 0
}551 2
}66 
}77 û

KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Sesion.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

class 
Sesion 
{ 
private		 
static		 
Sesion		 
_playerSesion		 +
=		, -
null		. 2
;		2 3
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
private 
Sesion 
( 
) 
{ 
} 
public 
static 
Sesion 
	GetSesion &
{ 	
get 
{ 
if 
( 
_playerSesion !
==" $
null% )
)) *
{ 
_playerSesion !
=" #
new$ '
Sesion( .
(. /
)/ 0
;0 1
} 
return 
_playerSesion $
;$ %
}   
}!! 	
}"" 
}## Ò
KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Player.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public		 

partial		 
class		 
Player		 
{

 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public 
Player 
( 
) 
{ 
} 
[ 	
Key	 
] 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
Score 
{ 
get 
; 
set  #
;# $
}% &
} 
} ˛
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str !
)! "
]" #
[		 
assembly		 	
:			 
!
AssemblyConfiguration		  
(		  !
$str		! #
)		# $
]		$ %
[

 
assembly

 	
:

	 

AssemblyCompany

 
(

 
$str

 ,
)

, -
]

- .
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *Ä
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\AccountRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public		 

class		 
AccountRepository		 "
:		# $

Repository		% /
<		/ 0
Account		0 7
>		7 8
,		8 9
IAccountRepository		: L
{

 
public 
MemoryGameContext  
MemoryGameContext! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
AccountRepository  
(  !
	DbContext! *
context+ 2
)2 3
:4 5
base6 :
(: ;
context; B
)B C
{D E
}F G
public 
Account $
GetAccountWithPlayerInfo /
(/ 0
string0 6
username7 ?
)? @
{ 	

IQueryable   
<   
Account   
>   
accountsRetrieved    1
=  2 3
MemoryGameContext  4 E
.  E F
Accounts  F N
.  N O
Where  O T
(  T U
account  U \
=>  ] _
account  ` g
.  g h
Username  h p
==  q s
username  t |
)  | }
;  } ~
if!! 
(!! 
accountsRetrieved!! !
!=!!" $
null!!% )
)!!) *
{"" 
Account## 
account## 
=##  !
accountsRetrieved##" 3
.##3 4
First##4 9
(##9 :
)##: ;
;##; <
return$$ 
account$$ 
;$$ 
}%% 
return&& 
null&& 
;&& 
}'' 	
public** 
IEnumerable** 
<** 
Account** "
>**" #-
!GetNumberOfAccountsWithPlayerInfo**$ E
(**E F
int**F I)
numberOfAccountsToBeRetrieved**J g
)**g h
{++ 	
IEnumerable,, 
<,, 
Account,, 
>,,  
accounts,,! )
=,,* +
new,,, /
List,,0 4
<,,4 5
Account,,5 <
>,,< =
(,,= >
),,> ?
;,,? @
IEnumerable-- 
<-- 
Account-- 
>--  
accountsRetrieved--! 2
=--3 4
MemoryGameContext--5 F
.--F G
Accounts--G O
.--O P
Include--P W
(--W X
$str--X `
)--` a
;--a b
if.. 
(.. 
accountsRetrieved..  
!=..! #
null..$ (
)..( )
{// 
accounts00 
=00 
accountsRetrieved00 ,
.00, -
OrderByDescending00- >
(00> ?
account00? F
=>00G I
account00J Q
.00Q R
Player00R X
.00X Y
Score00Y ^
)00^ _
.11 
Take11 
(11 )
numberOfAccountsToBeRetrieved11 7
)117 8
;118 9
}22 
return33 
accounts33 
;33 
}44 	
}55 
}66 ø
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\CardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
CardDeckRepository #
:$ %

Repository& 0
<0 1
CardDeck1 9
>9 :
,: ;
ICardDeckRepository< O
{ 
public 
MemoryGameContext  
MemoryGameContext! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
CardDeckRepository !
(! "
	DbContext" +
context, 3
)3 4
:5 6
base7 ;
(; <
context< C
)C D
{E F
}G H
public!! 
CardDeck!! 
GetCardDeckAndCards!! +
(!!+ ,
int!!, /

cardDeckId!!0 :
)!!: ;
{"" 	
IEnumerable## 
<## 
CardDeck##  
>##  !
cardDecksRetrieved##" 4
=##5 6
MemoryGameContext##7 H
.##H I
	CardDecks##I R
.##R S
Include##S Z
(##Z [
$str##[ b
)##b c
.$$ 
Where$$ 
($$ 
cardDeck$$ 
=>$$  "
cardDeck$$# +
.$$+ ,

CardDeckId$$, 6
==$$7 9

cardDeckId$$: D
)$$D E
;$$E F
if%% 
(%% 
cardDecksRetrieved%% "
.%%" #
Any%%# &
(%%& '
)%%' (
)%%( )
{&& 
CardDeck'' )
cardDeckRetrievedFromDatabase'' 6
=''7 8
cardDecksRetrieved''9 K
.''K L
First''L Q
(''Q R
)''R S
;''S T
return(( )
cardDeckRetrievedFromDatabase(( 4
;((4 5
})) 
return** 
null** 
;** 
}++ 	
}-- 
}.. á
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IAccountRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IAccountRepository '
:( )
IRepository* 5
<5 6
Account6 =
>= >
{ 
Account $
GetAccountWithPlayerInfo (
(( )
string) /
username0 8
)8 9
;9 :
IEnumerable 
< 
Account 
> -
!GetNumberOfAccountsWithPlayerInfo >
(> ?
int? B)
numberOfAccountsToBeRetrievedC `
)` a
;a b
} 
} °
\C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\ICardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public

 

	interface

 
ICardDeckRepository

 (
:

) *
IRepository

+ 6
<

6 7
CardDeck

7 ?
>

? @
{ 
CardDeck 
GetCardDeckAndCards $
($ %
int% (

cardDeckId) 3
)3 4
;4 5
} 
} „
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IPlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public

 

	interface

 
IPlayerRepository

 &
:

' (
IRepository

) 4
<

4 5
Player

5 ;
>

; <
{ 
void *
UpdateScoreOfPlayersAfterMatch +
(+ ,
string, 2
username3 ;
,; <
int= @
scoreA F
)F G
;G H
Player  
FindPlayerByUsername #
(# $
string$ *
username+ 3
)3 4
;4 5
} 
} ˆ
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public// 

	interface// 
IRepository//  
<//  !
TEntity//! (
>//( )
where//* /
TEntity//0 7
://8 9
class//: ?
{00 
TEntity66 
Get66 
(66 
object66 
id66 
)66 
;66 
IEnumerable<< 
<<< 
TEntity<< 
><< 
GetAll<< #
(<<# $
)<<$ %
;<<% &
IEnumerableCC 
<CC 
TEntityCC 
>CC 
FindCC !
(CC! "
FuncCC" &
<CC& '
TEntityCC' .
,CC. /
boolCC0 4
>CC4 5
	predicateCC6 ?
)CC? @
;CC@ A
TEntityJJ 
FindFirstOccurenceJJ "
(JJ" #
FuncJJ# '
<JJ' (
TEntityJJ( /
,JJ/ 0
boolJJ1 5
>JJ5 6
	predicateJJ7 @
)JJ@ A
;JJA B
voidPP 
AddPP 
(PP 
TEntityPP 
entityPP 
)PP  
;PP  !
voidVV 
AddRangeVV 
(VV 
IEnumerableVV !
<VV! "
TEntityVV" )
>VV) *
entitiesVV+ 3
)VV3 4
;VV4 5
void]] 
Remove]] 
(]] 
TEntity]] 
entity]] "
)]]" #
;]]# $
voidcc 
RemoveRangecc 
(cc 
IEnumerablecc $
<cc$ %
TEntitycc% ,
>cc, -
entitiescc. 6
)cc6 7
;cc7 8
}dd 
}ee ˜
YC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\PlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
PlayerRepository !
:" #

Repository$ .
<. /
Player/ 5
>5 6
,6 7
IPlayerRepository8 I
{		 
public 
MemoryGameContext  
MemoryGameContext! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
PlayerRepository 
(  
MemoryGameContext  1
context2 9
)9 :
:: ;
base; ?
(? @
context@ G
)G H
{I J
}K L
public 
void *
UpdateScoreOfPlayersAfterMatch 2
(2 3
string3 9
username: B
,B C
intD G
scoreH M
)M N
{ 	
IEnumerable 
< 
Account 
>  
retrievedAccounts! 2
=3 4
MemoryGameContext5 F
.F G
AccountsG O
.O P
IncludeP W
(W X
$strX `
)` a
. 
Where 
( 
account 
=> !
account" )
.) *
Username* 2
==3 5
username6 >
)> ?
;? @
if 
( 
retrievedAccounts !
.! "
Count" '
(' (
)( )
==* ,
$num- .
). /
{/ 0
Account 
account 
=  !
retrievedAccounts" 3
.3 4
First4 9
(9 :
): ;
;; <
Player 
player 
= 
account  '
.' (
Player( .
;. /
player 
. 
Score 
+= 
score  %
;% &
} 
}   	
public## 
Player##  
FindPlayerByUsername## *
(##* +
string##+ 1
username##2 :
)##: ;
{$$ 	
IEnumerable%% 
<%% 
Account%% 
>%%  
retrievedAccounts%%! 2
=%%3 4
MemoryGameContext%%5 F
.%%F G
Accounts%%G O
.%%O P
Include%%P W
(%%W X
$str%%X `
)%%` a
.&& 
Where&& 
(&& 
account&& 
=>&& !
account&&" )
.&&) *
Username&&* 2
==&&3 5
username&&6 >
)&&> ?
;&&? @
if'' 
('' 
retrievedAccounts''  
.''  !
Count''! &
(''& '
)''' (
=='') +
$num'', -
)''- .
{(( 
Account)) 
account)) 
=))  !
retrievedAccounts))" 3
.))3 4
First))4 9
())9 :
))): ;
;)); <
return** 
account** 
.** 
Player** %
;**% &
}++ 
return,, 
null,, 
;,, 
}-- 	
}.. 
}// ó/
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\Repository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public		 

class		 

Repository		 
<		 
TEntity		 #
>		# $
:		% &
IRepository		' 2
<		2 3
TEntity		3 :
>		: ;
where

 
TEntity

 
:

 
class

 
{ 
	protected 
readonly 
	DbContext $
_context% -
;- .
public 

Repository 
( 
	DbContext #
context$ +
)+ ,
{ 	
_context 
= 
context 
; 
} 	
public 
TEntity 
Get 
( 
object !
id" $
)$ %
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
Find+ /
(/ 0
id0 2
)2 3
;3 4
} 	
public!! 
IEnumerable!! 
<!! 
TEntity!! "
>!!" #
GetAll!!$ *
(!!* +
)!!+ ,
{"" 	
return## 
_context## 
.## 
Set## 
<##  
TEntity##  '
>##' (
(##( )
)##) *
.##* +
ToList##+ 1
(##1 2
)##2 3
;##3 4
}$$ 	
public'' 
IEnumerable'' 
<'' 
TEntity'' "
>''" #
Find''$ (
(''( )
Func'') -
<''- .
TEntity''. 5
,''5 6
bool''7 ;
>''; <
	predicate''= F
)''F G
{(( 	
IEnumerable)) 
<)) 
TEntity)) 
>))  
matchingResults))! 0
=))1 2
new))3 6
List))7 ;
<)); <
TEntity))< C
>))C D
())D E
)))E F
;))F G
if** 
(** 
	predicate** 
!=** 
null** !
)**! "
{++ 
matchingResults,, 
=,,  !
_context,," *
.,,* +
Set,,+ .
<,,. /
TEntity,,/ 6
>,,6 7
(,,7 8
),,8 9
.,,9 :
Where,,: ?
(,,? @
	predicate,,@ I
),,I J
;,,J K
}-- 
return.. 
matchingResults.. "
;.." #
}// 	
public22 
TEntity22 
FindFirstOccurence22 )
(22) *
Func22* .
<22. /
TEntity22/ 6
,226 7
bool228 <
>22< =
	predicate22> G
)22G H
{33 	
IEnumerable44 
<44 
TEntity44 
>44  
results44! (
=44) *
_context44+ 3
.443 4
Set444 7
<447 8
TEntity448 ?
>44? @
(44@ A
)44A B
.44B C
Where44C H
(44H I
	predicate44I R
)44R S
;44S T
if55 
(55 
results55 
.55 
Any55 
(55 
)55 
)55 
{66 
return77 
results77 
.77 
First77 $
(77$ %
)77% &
;77& '
}88 
return99 
null99 
;99 
}:: 	
public== 
void== 
Add== 
(== 
TEntity== 
entity==  &
)==& '
{>> 	
if?? 
(?? 
entity?? 
!=?? 
null?? 
)?? 
{@@ 
_contextAA 
.AA 
SetAA 
<AA 
TEntityAA $
>AA$ %
(AA% &
)AA& '
.AA' (
AddAA( +
(AA+ ,
entityAA, 2
)AA2 3
;AA3 4
}BB 
}CC 	
publicFF 
voidFF 
AddRangeFF 
(FF 
IEnumerableFF (
<FF( )
TEntityFF) 0
>FF0 1
entitiesFF2 :
)FF: ;
{GG 	
ifHH 
(HH 
entitiesHH 
!=HH 
nullHH 
&&HH  "
entitiesHH# +
.HH+ ,
AnyHH, /
(HH/ 0
)HH0 1
)HH1 2
{II 
_contextJJ 
.JJ 
SetJJ 
<JJ 
TEntityJJ $
>JJ$ %
(JJ% &
)JJ& '
.JJ' (
AddRangeJJ( 0
(JJ0 1
entitiesJJ1 9
)JJ9 :
;JJ: ;
}KK 
}LL 	
publicOO 
voidOO 
RemoveOO 
(OO 
TEntityOO "
entityOO# )
)OO) *
{PP 	
ifQQ 
(QQ 
entityQQ 
!=QQ 
nullQQ 
)QQ 
{RR 
_contextSS 
.SS 
SetSS 
<SS 
TEntitySS $
>SS$ %
(SS% &
)SS& '
.SS' (
RemoveSS( .
(SS. /
entitySS/ 5
)SS5 6
;SS6 7
}TT 
}UU 	
publicXX 
voidXX 
RemoveRangeXX 
(XX  
IEnumerableXX  +
<XX+ ,
TEntityXX, 3
>XX3 4
entitiesXX5 =
)XX= >
{YY 	
ifZZ 
(ZZ 
entitiesZZ 
!=ZZ 
nullZZ 
&&ZZ  "
entitiesZZ# +
.ZZ+ ,
AnyZZ, /
(ZZ/ 0
)ZZ0 1
)ZZ1 2
{[[ 
_context\\ 
.\\ 
Set\\ 
<\\ 
TEntity\\ $
>\\$ %
(\\% &
)\\& '
.\\' (
RemoveRange\\( 3
(\\3 4
entities\\4 <
)\\< =
;\\= >
}]] 
}^^ 	
}__ 
}`` ü
UC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\IUnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 
IPlayerRepository 
Players !
{" #
get$ '
;' (
}) *
ICardDeckRepository 
	CardDecks %
{& '
get( +
;+ ,
}- .
IRepository 
< 
Match 
> 
Matches "
{# $
get% (
;( )
}* +
IAccountRepository 
Accounts #
{$ %
get& )
;) *
}+ ,
int&& 
Complete&& 
(&& 
)&& 
;&& 
}'' 
}(( ö
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\UnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly 
MemoryGameContext *
_context+ 3
;3 4
public 
IPlayerRepository  
Players! (
{) *
get+ .
;. /
private0 7
set8 ;
;; <
}= >
public 
ICardDeckRepository "
	CardDecks# ,
{- .
get/ 2
;2 3
private4 ;
set< ?
;? @
}A B
public 
IRepository 
< 
Match  
>  !
Matches" )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public!! 
IAccountRepository!! !
Accounts!!" *
{!!+ ,
get!!- 0
;!!0 1
private!!2 9
set!!: =
;!!= >
}!!? @
public'' 

UnitOfWork'' 
('' 
MemoryGameContext'' +
context'', 3
)''3 4
{(( 	
_context)) 
=)) 
context)) 
;)) 
Players** 
=** 
new** 
PlayerRepository** *
(*** +
_context**+ 3
)**3 4
;**4 5
	CardDecks++ 
=++ 
new++ 
CardDeckRepository++ .
(++. /
_context++/ 7
)++7 8
;++8 9
Matches,, 
=,, 
new,, 

Repository,, $
<,,$ %
Match,,% *
>,,* +
(,,+ ,
_context,,, 4
),,4 5
;,,5 6
Accounts-- 
=-- 
new-- 
AccountRepository-- ,
(--, -
_context--- 5
)--5 6
;--6 7
}.. 	
public44 
int44 
Complete44 
(44 
)44 
{55 	
return66 
_context66 
.66 
SaveChanges66 '
(66' (
)66( )
;66) *
}77 	
public<< 
void<< 
Dispose<< 
(<< 
)<< 
{== 	
_context>> 
.>> 
Dispose>> 
(>> 
)>> 
;>> 
}?? 	
}@@ 
}AA 