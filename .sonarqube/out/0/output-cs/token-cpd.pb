—
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\CardDeck.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
CardDeck !
{ 
[		 	
System			 
.		 
Diagnostics		 
.		 
CodeAnalysis		 (
.		( )
SuppressMessage		) 8
(		8 9
$str		9 J
,		J K
$str		L ~
)		~ 
]			 Ä
public

 
CardDeck

 
(

 
)

 
{ 	
Cards 
= 
new 
HashSet 
<  
Card  $
>$ %
(% &
)& '
;' (
Matches 
= 
new 
HashSet !
<! "
Match" '
>' (
(( )
)) *
;* +
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
None3 7
)7 8
]8 9
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 

ThematicId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
string 
	BackImage 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
NumberOfPairs  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL y
)y z
]z {
public   
virtual   
ICollection   "
<  " #
Card  # '
>  ' (
Cards  ) .
{  / 0
get  1 4
;  4 5
set  6 9
;  9 :
}  ; <
["" 	
System""	 
."" 
Diagnostics"" 
."" 
CodeAnalysis"" (
.""( )
SuppressMessage"") 8
(""8 9
$str""9 J
,""J K
$str""L y
)""y z
]""z {
public## 
virtual## 
ICollection## "
<##" #
Match### (
>##( )
Matches##* 1
{##2 3
get##4 7
;##7 8
set##9 <
;##< =
}##> ?
}$$ 
}%% ´	
IC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Card.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Card 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
None3 7
)7 8
]8 9
public		 
int		 
CardId		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
public 
string 

FrontImage  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
virtual 
CardDeck 
	CardDecks  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
} 
} ©(
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\MemoryGameContext.cs
	namespace 	

DataAccess
 
{ 
public 

partial 
class 
MemoryGameContext *
:+ ,
	DbContext- 6
{ 
public 
MemoryGameContext  
(  !
)! "
:		 
base		 
(		 
$str		 $
)		$ %
{

 	
var 
ensureDllIsCopied !
=" #
System$ *
.* +
Data+ /
./ 0
Entity0 6
.6 7
	SqlServer7 @
.@ A
SqlProviderServicesA T
.T U
InstanceU ]
;] ^
} 	
public 
virtual 
DbSet 
< 
CardDeck %
>% &
	CardDecks' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Card !
>! "
Cards# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 
DbSet 
< 
Match "
>" #
Matches$ +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
Player #
># $
Players% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
virtual 
DbSet 
< 
Winner #
># $
Winners% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
	protected 
override 
void 
OnModelCreating  /
(/ 0
DbModelBuilder0 >
modelBuilder? K
)K L
{ 	
modelBuilder 
. 
Entity 
<  
CardDeck  (
>( )
() *
)* +
. 
HasMany 
( 
e 
=> 
e 
.  
Cards  %
)% &
. 
WithRequired 
( 
e 
=>  "
e# $
.$ %
	CardDecks% .
). /
. 
WillCascadeOnDelete $
($ %
false% *
)* +
;+ ,
modelBuilder 
. 
Entity 
<  
CardDeck  (
>( )
() *
)* +
. 
HasMany 
( 
e 
=> 
e 
.  
Matches  '
)' (
. 
WithRequired 
( 
e 
=>  "
e# $
.$ %
	CardDecks% .
). /
. 
WillCascadeOnDelete $
($ %
false% *
)* +
;+ ,
modelBuilder   
.   
Entity   
<    
Match    %
>  % &
(  & '
)  ' (
.!! 
HasMany!! 
(!! 
e!! 
=>!! 
e!! 
.!!  
Winners!!  '
)!!' (
."" 
WithRequired"" 
("" 
e"" 
=>""  "
e""# $
.""$ %
Matches""% ,
)"", -
.## 
WillCascadeOnDelete## $
(##$ %
false##% *
)##* +
;##+ ,
modelBuilder%% 
.%% 
Entity%% 
<%%  
Player%%  &
>%%& '
(%%' (
)%%( )
.&& 
HasMany&& 
(&& 
e&& 
=>&& 
e&& 
.&&  
Winners&&  '
)&&' (
.'' 
WithRequired'' 
('' 
e'' 
=>''  "
e''# $
.''$ %
Players''% ,
)'', -
.(( 
WillCascadeOnDelete(( $
((($ %
false((% *
)((* +
;((+ ,
modelBuilder** 
.** 
Entity** 
<**  
Player**  &
>**& '
(**' (
)**( )
.++ 
HasMany++ 
(++ 
e++ 
=>++ 
e++ 
.++  
Matches++  '
)++' (
.,, 
WithMany,, 
(,, 
e,, 
=>,, 
e,,  
.,,  !
Players,,! (
),,( )
.-- 
Map-- 
(-- 
m-- 
=>-- 
m-- 
.-- 
ToTable-- #
(--# $
$str--$ 3
)--3 4
.--4 5

MapLeftKey--5 ?
(--? @
$str--@ N
)--N O
.--O P
MapRightKey--P [
(--[ \
$str--\ e
)--e f
)--f g
;--g h
}.. 	
}// 
}00 í
JC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Match.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Match 
{ 
[		 	
System			 
.		 
Diagnostics		 
.		 
CodeAnalysis		 (
.		( )
SuppressMessage		) 8
(		8 9
$str		9 J
,		J K
$str		L ~
)		~ 
]			 Ä
public

 
Match

 
(

 
)

 
{ 	
Winners 
= 
new 
HashSet !
<! "
Winner" (
>( )
() *
)* +
;+ ,
Players 
= 
new 
HashSet !
<! "
Player" (
>( )
() *
)* +
;+ ,
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
None3 7
)7 8
]8 9
public 
int 
MatchId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Duration 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 
CardDeck 
	CardDecks  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL y
)y z
]z {
public 
virtual 
ICollection "
<" #
Winner# )
>) *
Winners+ 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL y
)y z
]z {
public   
virtual   
ICollection   "
<  " #
Player  # )
>  ) *
Players  + 2
{  3 4
get  5 8
;  8 9
set  : =
;  = >
}  ? @
}!! 
}"" û

KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Sesion.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

class 
Sesion 
{ 
private 
static 
Sesion 
_playerSesion +
=, -
null. 2
;2 3
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
private		 
Sesion		 
(		 
)		 
{		 
}		 
public

 
static

 
Sesion

 
	GetSesion

 &
{ 	
get 
{ 
if 
( 
_playerSesion !
==" $
null% )
)) *
{ 
_playerSesion !
=" #
new$ '
Sesion( .
(. /
)/ 0
;0 1
} 
return 
_playerSesion $
;$ %
} 
} 	
} 
} “
KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Player.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Player 
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public		 
Player		 
(		 
)		 
{

 	
Winners 
= 
new 
HashSet !
<! "
Winner" (
>( )
() *
)* +
;+ ,
Matches 
= 
new 
HashSet !
<! "
Match" '
>' (
(( )
)) *
;* +
} 	
[ 	
Key	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
] 
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 

TotalScore 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
EmailWasVerified $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
ActivationToken %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[   	
StringLength  	 
(   
$num   
)   
]   
public!! 
string!! 
RecoveryToken!! #
{!!$ %
get!!& )
;!!) *
set!!+ .
;!!. /
}!!0 1
[## 	
System##	 
.## 
Diagnostics## 
.## 
CodeAnalysis## (
.##( )
SuppressMessage##) 8
(##8 9
$str##9 J
,##J K
$str##L y
)##y z
]##z {
public$$ 
virtual$$ 
ICollection$$ "
<$$" #
Winner$$# )
>$$) *
Winners$$+ 2
{$$3 4
get$$5 8
;$$8 9
set$$: =
;$$= >
}$$? @
[&& 	
System&&	 
.&& 
Diagnostics&& 
.&& 
CodeAnalysis&& (
.&&( )
SuppressMessage&&) 8
(&&8 9
$str&&9 J
,&&J K
$str&&L y
)&&y z
]&&z {
public'' 
virtual'' 
ICollection'' "
<''" #
Match''# (
>''( )
Matches''* 1
{''2 3
get''4 7
;''7 8
set''9 <
;''< =
}''> ?
}(( 
})) ∑
eC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202012040439359_AddingCardDeck.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class 
AddingCardDeck '
:( )
DbMigration* 5
{ 
public 
override 
void 
Up 
(  
)  !
{ 	
DropForeignKey		 
(		 
$str		 &
,		& '
$str		( 4
,		4 5
$str		6 E
)		E F
;		F G
DropForeignKey

 
(

 
$str

 (
,

( )
$str

* 6
,

6 7
$str

8 G
)

G H
;

H I
DropPrimaryKey 
( 
$str *
)* +
;+ ,
AlterColumn 
( 
$str '
,' (
$str) 5
,5 6
c7 8
=>9 ;
c< =
.= >
Int> A
(A B
nullableB J
:J K
falseL Q
)Q R
)R S
;S T
AddPrimaryKey 
( 
$str )
,) *
$str+ 7
)7 8
;8 9
AddForeignKey 
( 
$str %
,% &
$str' 3
,3 4
$str5 D
,D E
$strF R
)R S
;S T
AddForeignKey 
( 
$str '
,' (
$str) 5
,5 6
$str7 F
,F G
$strH T
)T U
;U V
} 	
public 
override 
void 
Down !
(! "
)" #
{ 	
DropForeignKey 
( 
$str (
,( )
$str* 6
,6 7
$str8 G
)G H
;H I
DropForeignKey 
( 
$str &
,& '
$str( 4
,4 5
$str6 E
)E F
;F G
DropPrimaryKey 
( 
$str *
)* +
;+ ,
AlterColumn 
( 
$str '
,' (
$str) 5
,5 6
c7 8
=>9 ;
c< =
.= >
Int> A
(A B
nullableB J
:J K
falseL Q
,Q R
identityS [
:[ \
true] a
)a b
)b c
;c d
AddPrimaryKey 
( 
$str )
,) *
$str+ 7
)7 8
;8 9
AddForeignKey 
( 
$str '
,' (
$str) 5
,5 6
$str7 F
,F G
$strH T
)T U
;U V
AddForeignKey 
( 
$str %
,% &
$str' 3
,3 4
$str5 D
,D E
$strF R
)R S
;S T
} 	
} 
} â
dC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202012040456441_SolvingExepto.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class 
SolvingExepto &
:' (
DbMigration) 4
{ 
public 
override 
void 
Up 
(  
)  !
{ 	
RenameColumn		 
(		 
table		 
:		 
$str		  +
,		+ ,
name		- 1
:		1 2
$str		3 ?
,		? @
newName		A H
:		H I
$str		J `
)		` a
;		a b
RenameIndex

 
(

 
table

 
:

 
$str

 *
,

* +
name

, 0
:

0 1
$str

2 A
,

A B
newName

C J
:

J K
$str

L e
)

e f
;

f g
} 	
public 
override 
void 
Down !
(! "
)" #
{ 	
RenameIndex 
( 
table 
: 
$str *
,* +
name, 0
:0 1
$str2 K
,K L
newNameM T
:T U
$strV e
)e f
;f g
RenameColumn 
( 
table 
: 
$str  +
,+ ,
name- 1
:1 2
$str3 I
,I J
newNameK R
:R S
$strT `
)` a
;a b
} 	
} 
} â
dC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202012040500490_SolveExcption.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class 
SolveExcption &
:' (
DbMigration) 4
{ 
public 
override 
void 
Up 
(  
)  !
{ 	
RenameColumn		 
(		 
table		 
:		 
$str		  +
,		+ ,
name		- 1
:		1 2
$str		3 I
,		I J
newName		K R
:		R S
$str		T `
)		` a
;		a b
RenameIndex

 
(

 
table

 
:

 
$str

 *
,

* +
name

, 0
:

0 1
$str

2 K
,

K L
newName

M T
:

T U
$str

V e
)

e f
;

f g
} 	
public 
override 
void 
Down !
(! "
)" #
{ 	
RenameIndex 
( 
table 
: 
$str *
,* +
name, 0
:0 1
$str2 A
,A B
newNameC J
:J K
$strL e
)e f
;f g
RenameColumn 
( 
table 
: 
$str  +
,+ ,
name- 1
:1 2
$str3 ?
,? @
newNameA H
:H I
$strJ `
)` a
;a b
} 	
} 
} Æ=
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\Configuration.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
internal 
sealed 
class 
Configuration '
:( )%
DbMigrationsConfiguration* C
<C D

DataAccessD N
.N O
MemoryGameContextO `
>` a
{ 
public 
Configuration 
( 
) 
{		 	&
AutomaticMigrationsEnabled

 &
=

' (
false

) .
;

. /
} 	
	protected 
override 
void 
Seed  $
($ %

DataAccess% /
./ 0
MemoryGameContext0 A
contextB I
)I J
{ 	
context 
. 
Players 
. 
AddOrUpdate '
(' (
x( )
=>* ,
x- .
.. /
EmailAddress/ ;
,; <
new 
Player 
( 
) 
{ 
EmailAddress  
=! "
$str# ;
,; <
UserName 
= 
$str )
,) *
Password 
= 
$str A
,A B

TotalScore 
=  
$num! $
,$ %
EmailWasVerified $
=% &
false' ,
,, -
ActivationToken #
=$ %
$str& .
,. /
RecoveryToken !
=" #
null$ (
} 
, 
new 
Player 
( 
) 
{ 
EmailAddress  
=! "
$str# 9
,9 :
UserName 
= 
$str )
,) *
Password 
= 
$str A
,A B

TotalScore 
=  
$num! #
,# $
EmailWasVerified   $
=  % &
false  ' ,
,  , -
ActivationToken!! #
=!!$ %
$str!!& .
,!!. /
RecoveryToken"" !
=""" #
null""$ (
}## 
,## 
new$$ 
Player$$ 
($$ 
)$$ 
{%% 
EmailAddress&&  
=&&! "
$str&&# A
,&&A B
UserName'' 
='' 
$str'' )
,'') *
Password(( 
=(( 
$str(( A
,((A B

TotalScore)) 
=))  
$num))! $
,))$ %
EmailWasVerified** $
=**% &
false**' ,
,**, -
ActivationToken++ #
=++$ %
$str++& .
,++. /
RecoveryToken,, !
=,," #
null,,$ (
}-- 
,-- 
new.. 
Player.. 
(.. 
).. 
{// 
EmailAddress00  
=00! "
$str00# 8
,008 9
UserName11 
=11 
$str11 +
,11+ ,
Password22 
=22 
$str22 A
,22A B

TotalScore33 
=33  
$num33! $
,33$ %
EmailWasVerified44 $
=44% &
false44' ,
,44, -
ActivationToken55 #
=55$ %
$str55& .
,55. /
RecoveryToken66 !
=66" #
null66$ (
}77 
)88 
;88 
context:: 
.:: 
	CardDecks:: 
.:: 
AddOrUpdate:: )
(::) *
x::* +
=>::, .
x::/ 0
.::0 1

CardDeckId::1 ;
,::; <
new;; 
CardDeck;; 
(;; 
);; 
{<< 

CardDeckId== 
===  
$num==! "
,==" #
Name>> 
=>> 
$str>> -
,>>- .
	BackImage?? 
=?? 
$str??  9
,??9 :
NumberOfPairs@@ !
=@@" #
$num@@$ &
,@@& '
}AA 
)BB 
;BB 
contextDD 
.DD 
CardsDD 
.DD 
AddOrUpdateDD %
(DD% &
xDD& '
=>DD( *
xDD+ ,
.DD, -
CardIdDD- 3
,DD3 4
newEE 
CardEE 
(EE 
)EE 
{FF 
CardIdGG 
=GG 
$numGG 
,GG 

FrontImageHH 
=HH  
$strHH! 9
,HH9 :

CardDeckIdII 
=II  
$numII! "
}JJ 
,JJ 
newKK 
CardKK 
(KK 
)KK 
{LL 
CardIdMM 
=MM 
$numMM 
,MM 

FrontImageNN 
=NN  
$strNN! 9
,NN9 :

CardDeckIdOO 
=OO  
$numOO! "
}PP 
,PP 
newQQ 
CardQQ 
(QQ 
)QQ 
{RR 
CardIdSS 
=SS 
$numSS 
,SS 

FrontImageTT 
=TT  
$strTT! 9
,TT9 :

CardDeckIdUU 
=UU  
$numUU! "
}VV 
,VV 
newWW 
CardWW 
(WW 
)WW 
{XX 
CardIdYY 
=YY 
$numYY 
,YY 

FrontImageZZ 
=ZZ  
$strZZ! 9
,ZZ9 :

CardDeckId[[ 
=[[  
$num[[! "
}\\ 
,\\ 
new]] 
Card]] 
(]] 
)]] 
{^^ 
CardId__ 
=__ 
$num__ 
,__ 

FrontImage`` 
=``  
$str``! 9
,``9 :

CardDeckIdaa 
=aa  
$numaa! "
}bb 
,bb 
newcc 
Cardcc 
(cc 
)cc 
{dd 
CardIdee 
=ee 
$numee 
,ee 

FrontImageff 
=ff  
$strff! 9
,ff9 :

CardDeckIdgg 
=gg  
$numgg! "
}hh 
,hh 
newii 
Cardii 
(ii 
)ii 
{jj 
CardIdkk 
=kk 
$numkk 
,kk 

FrontImagell 
=ll  
$strll! 9
,ll9 :

CardDeckIdmm 
=mm  
$nummm! "
}nn 
,nn 
newoo 
Cardoo 
(oo 
)oo 
{pp 
CardIdqq 
=qq 
$numqq 
,qq 

FrontImagerr 
=rr  
$strrr! 9
,rr9 :

CardDeckIdss 
=ss  
$numss! "
}tt 
,tt 
newuu 
Carduu 
(uu 
)uu 
{vv 
CardIdww 
=ww 
$numww 
,ww 

FrontImagexx 
=xx  
$strxx! 9
,xx9 :

CardDeckIdyy 
=yy  
$numyy! "
}zz 
,zz 
new{{ 
Card{{ 
({{ 
){{ 
{|| 
CardId}} 
=}} 
$num}} 
,}}  

FrontImage~~ 
=~~  
$str~~! :
,~~: ;

CardDeckId 
=  
$num! "
}
ÄÄ 
,
ÄÄ 
new
ÅÅ 
Card
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
CardId
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
,
ÉÉ  

FrontImage
ÑÑ 
=
ÑÑ  
$str
ÑÑ! :
,
ÑÑ: ;

CardDeckId
ÖÖ 
=
ÖÖ  
$num
ÖÖ! "
}
ÜÜ 
)
áá 
;
áá 
}
çç 	
}
éé 
}èè ˛
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *¿
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\CardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
CardDeckRepository #
:$ %

Repository& 0
<0 1
CardDeck1 9
>9 :
,: ;
ICardDeckRepository< O
{ 
public

 
MemoryGameContext

  
MemoryGameContext

! 2
{ 	
get 
{ 
return 
_context !
as" $
MemoryGameContext% 6
;6 7
}8 9
} 	
public 
CardDeckRepository !
(! "
	DbContext" +
context, 3
)3 4
:5 6
base7 ;
(; <
context< C
)C D
{ 	
} 	
public 
CardDeck 
GetCardDeckAndCards +
(+ ,
int, /

cardDeckId0 :
): ;
{ 	
CardDeck 
cardDeck 
= 
MemoryGameContext  1
.1 2
	CardDecks2 ;
.; <
Include< C
(C D
$strD K
)K L
. 
First 
( 
) 
; 
return 
cardDeck 
; 
} 	
} 
} °
\C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\ICardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
ICardDeckRepository (
:) *
IRepository+ 6
<6 7
CardDeck7 ?
>? @
{ 
CardDeck 
GetCardDeckAndCards $
($ %
int% (

cardDeckId) 3
)3 4
;4 5
} 
}		 ∞
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IPlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IPlayerRepository &
:' (
IRepository) 4
<4 5
Entities5 =
.= >
Player> D
>D E
{ 
IEnumerable 
< 
Entities 
. 
Player #
># $#
GetPlayersWithBestScore% <
(< =
int= @(
numberOfPlayersToBeRetrievedA ]
)] ^
;^ _
}		 
}

 ó
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IRepository  
<  !
TEntity! (
>( )
where* /
TEntity0 7
:8 9
class: ?
{ 
TEntity 
Get 
( 
object 
id 
) 
; 
IEnumerable		 
<		 
TEntity		 
>		 
GetAll		 #
(		# $
)		$ %
;		% &
IEnumerable

 
<

 
TEntity

 
>

 
Find

 !
(

! "
Func

" &
<

& '
TEntity

' .
,

. /
bool

0 4
>

4 5
	predicate

6 ?
)

? @
;

@ A
void 
Add 
( 
TEntity 
entity 
)  
;  !
void 
AddRange 
( 
IEnumerable !
<! "
TEntity" )
>) *
entities+ 3
)3 4
;4 5
void 
Remove 
( 
TEntity 
entity "
)" #
;# $
void 
RemoveRange 
( 
IEnumerable $
<$ %
TEntity% ,
>, -
entities. 6
)6 7
;7 8
} 
} Ñ
YC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\PlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
PlayerRepository !
:" #

Repository$ .
<. /
Entities/ 7
.7 8
Player8 >
>> ?
,? @
IPlayerRepositoryA R
{ 
public

 
MemoryGameContext

  
MemoryGameContext

! 2
{ 	
get 
{ 
return 
_context !
as" $
MemoryGameContext% 6
;6 7
}8 9
} 	
public 
PlayerRepository 
(  
MemoryGameContext  1
context2 9
)9 :
:: ;
base; ?
(? @
context@ G
)G H
{ 	
} 	
public 
IEnumerable 
< 
Entities #
.# $
Player$ *
>* +#
GetPlayersWithBestScore, C
(C D
intD G(
numberOfPlayersToBeRetrievedH d
)d e
{ 	
IEnumerable 
< 
Player 
> 
players  '
=( )
MemoryGameContext* ;
.; <
Players< C
. 
OrderByDescending "
(" #
player# )
=>* ,
player- 3
.3 4

TotalScore4 >
)> ?
.? @
Take@ D
(D E(
numberOfPlayersToBeRetrievedE a
)a b
;b c
return 
players 
; 
} 	
} 
} ¿
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\Repository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 

Repository 
< 
TEntity #
># $
:% &
IRepository' 2
<2 3
TEntity3 :
>: ;
where		 
TEntity		 
:		 
class		 
{

 
	protected 
readonly 
	DbContext $
_context% -
;- .
public 

Repository 
( 
	DbContext #
context$ +
)+ ,
{ 	
_context 
= 
context 
; 
} 	
public 
TEntity 
Get 
( 
object !
id" $
)$ %
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
Find+ /
(/ 0
id0 2
)2 3
;3 4
} 	
public 
IEnumerable 
< 
TEntity "
>" #
GetAll$ *
(* +
)+ ,
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
ToList+ 1
(1 2
)2 3
;3 4
} 	
public 
IEnumerable 
< 
TEntity "
>" #
Find$ (
(( )
Func) -
<- .
TEntity. 5
,5 6
bool7 ;
>; <
	predicate= F
)F G
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
Where+ 0
(0 1
	predicate1 :
): ;
;; <
} 	
public!! 
void!! 
Add!! 
(!! 
TEntity!! 
entity!!  &
)!!& '
{"" 	
_context## 
.## 
Set## 
<## 
TEntity##  
>##  !
(##! "
)##" #
.### $
Add##$ '
(##' (
entity##( .
)##. /
;##/ 0
}$$ 	
public&& 
void&& 
AddRange&& 
(&& 
IEnumerable&& (
<&&( )
TEntity&&) 0
>&&0 1
entities&&2 :
)&&: ;
{'' 	
_context(( 
.(( 
Set(( 
<(( 
TEntity((  
>((  !
(((! "
)((" #
.((# $
AddRange(($ ,
(((, -
entities((- 5
)((5 6
;((6 7
})) 	
public++ 
void++ 
Remove++ 
(++ 
TEntity++ "
entity++# )
)++) *
{,, 	
_context-- 
.-- 
Set-- 
<-- 
TEntity--  
>--  !
(--! "
)--" #
.--# $
Remove--$ *
(--* +
entity--+ 1
)--1 2
;--2 3
}.. 	
public00 
void00 
RemoveRange00 
(00  
IEnumerable00  +
<00+ ,
TEntity00, 3
>003 4
entities005 =
)00= >
{11 	
_context22 
.22 
Set22 
<22 
TEntity22  
>22  !
(22! "
)22" #
.22# $
RemoveRange22$ /
(22/ 0
entities220 8
)228 9
;229 :
}33 	
}44 
}55 ò
UC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\IUnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 
IPlayerRepository 
Players !
{" #
get$ '
;' (
}) *
int		 
Complete		 
(		 
)		 
;		 
}

 
} û
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\UnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly 
MemoryGameContext *
_context+ 3
;3 4
public 
IPlayerRepository  
Players! (
{) *
get+ .
;. /
private0 7
set8 ;
;; <
}= >
public		 
ICardDeckRepository		 "
	CardDecks		# ,
{		- .
get		/ 2
;		2 3
private		4 ;
set		< ?
;		? @
}		A B
public 

UnitOfWork 
( 
MemoryGameContext +
context, 3
)3 4
{ 	
_context 
= 
context 
; 
Players 
= 
new 
PlayerRepository *
(* +
_context+ 3
)3 4
;4 5
	CardDecks 
= 
new 
CardDeckRepository .
(. /
_context/ 7
)7 8
;8 9
} 	
public 
int 
Complete 
( 
) 
{ 	
return 
_context 
. 
SaveChanges '
(' (
)( )
;) *
} 	
public 
void 
Dispose 
( 
) 
{ 	
_context 
. 
Dispose 
( 
) 
; 
} 	
} 
} √
KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Winner.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Winner 
{ 
[ 	
Key	 
] 
[		 	
Column			 
(		 
Order		 
=		 
$num		 
)		 
]		 
[

 	
StringLength

	 
(

 
$num

 
)

 
]

 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Key	 
] 
[ 	
Column	 
( 
Order 
= 
$num 
) 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
None3 7
)7 8
]8 9
public 
int 
MatchId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Score 
{ 
get 
; 
set  #
;# $
}% &
public 
virtual 
Match 
Matches $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
virtual 
Player 
Players %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} 