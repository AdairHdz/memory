ô
LC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Account.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Account  
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public		 
Account		 
(		 
)		 
{

 	
} 	
[ 	
Key	 
] 
[ 	

ForeignKey	 
( 
$str 
) 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
] 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Salt 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
EmailWasVerified $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
ActivationToken %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[!! 	
StringLength!!	 
(!! 
$num!! 
)!! 
]!! 
public"" 
string"" 
RecoveryToken"" #
{""$ %
get""& )
;"") *
set""+ .
;"". /
}""0 1
public$$ 
virtual$$ 
Player$$ 
Player$$ $
{$$% &
get$$' *
;$$* +
set$$, /
;$$/ 0
}$$1 2
}%% 
}&& ¨
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\CardDeck.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
CardDeck !
{ 
[		 	
System			 
.		 
Diagnostics		 
.		 
CodeAnalysis		 (
.		( )
SuppressMessage		) 8
(		8 9
$str		9 J
,		J K
$str		L ~
)		~ 
]			 Ä
public

 
CardDeck

 
(

 
)

 
{ 	
Cards 
= 
new 
HashSet 
<  
Card  $
>$ %
(% &
)& '
;' (
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
string 
	BackImage 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
NumberOfPairs  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL y
)y z
]z {
public 
virtual 
ICollection "
<" #
Card# '
>' (
Cards) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} î

IC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Card.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Card 
{ 
[ 	
Key	 
] 
[		 	
DatabaseGenerated			 
(		 #
DatabaseGeneratedOption		 2
.		2 3
Identity		3 ;
)		; <
]		< =
public

 
int

 
CardId

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str  
)  !
]! "
public 
virtual 
CardDeck 
CardDeck  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[ 	
Required	 
] 
public 
string 

FrontImage  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
}  
MC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\MemoryGameContext.cs
	namespace 	

DataAccess
 
{ 
public 

partial 
class 
MemoryGameContext *
:+ ,
	DbContext- 6
{ 
public 
MemoryGameContext  
(  !
)! "
:		 
base		 
(		 
$str		 $
)		$ %
{

 	
var 
ensureDllIsCopied !
=" #
System$ *
.* +
Data+ /
./ 0
Entity0 6
.6 7
	SqlServer7 @
.@ A
SqlProviderServicesA T
.T U
InstanceU ]
;] ^
} 	
public 
virtual 
DbSet 
< 
CardDeck %
>% &
	CardDecks' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Card !
>! "
Cards# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 
DbSet 
< 
Match "
>" #
Matches$ +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
Player #
># $
Players% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
virtual 
DbSet 
< 
Account $
>$ %
Accounts& .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
	protected 
override 
void 
OnModelCreating  /
(/ 0
DbModelBuilder0 >
modelBuilder? K
)K L
{M N
}O P
} 
} ¯
JC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Match.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Match 
{ 
[		 	
System			 
.		 
Diagnostics		 
.		 
CodeAnalysis		 (
.		( )
SuppressMessage		) 8
(		8 9
$str		9 J
,		J K
$str		L ~
)		~ 
]			 Ä
public

 
Match

 
(

 
)

 
{ 	
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
MatchId 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

CardDeckId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str  
)  !
]! "
public 
virtual 
CardDeck 
CardDeck  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	

ForeignKey	 
( 
$str "
)" #
]# $
public 
virtual 
Player 
Winner $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} û

KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Sesion.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

class 
Sesion 
{ 
private 
static 
Sesion 
_playerSesion +
=, -
null. 2
;2 3
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
private		 
Sesion		 
(		 
)		 
{		 
}		 
public

 
static

 
Sesion

 
	GetSesion

 &
{ 	
get 
{ 
if 
( 
_playerSesion !
==" $
null% )
)) *
{ 
_playerSesion !
=" #
new$ '
Sesion( .
(. /
)/ 0
;0 1
} 
return 
_playerSesion $
;$ %
} 
} 	
} 
} Ò
KC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Entities\Player.cs
	namespace 	

DataAccess
 
. 
Entities 
{ 
public 

partial 
class 
Player 
{ 
[ 	
System	 
. 
Diagnostics 
. 
CodeAnalysis (
.( )
SuppressMessage) 8
(8 9
$str9 J
,J K
$strL ~
)~ 
]	 Ä
public 
Player 
( 
) 
{ 
} 
[

 	
Key

	 
]

 
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
Score 
{ 
get 
; 
set  #
;# $
}% &
} 
} ∞
gC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\202101100503290_AddedDateToMatch.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
public 

partial 
class 
AddedDateToMatch )
:* +
DbMigration, 7
{ 
public 
override 
void 
Up 
(  
)  !
{ 	
	AddColumn		 
(		 
$str		 #
,		# $
$str		% +
,		+ ,
c		- .
=>		/ 1
c		2 3
.		3 4
DateTime		4 <
(		< =
nullable		= E
:		E F
false		G L
)		L M
)		M N
;		N O
}

 	
public 
override 
void 
Down !
(! "
)" #
{ 	

DropColumn 
( 
$str $
,$ %
$str& ,
), -
;- .
} 	
} 
} Å(
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Migrations\Configuration.cs
	namespace 	

DataAccess
 
. 

Migrations 
{ 
internal 
sealed 
class 
Configuration '
:( )%
DbMigrationsConfiguration* C
<C D

DataAccessD N
.N O
MemoryGameContextO `
>` a
{ 
public 
Configuration 
( 
) 
{		 	&
AutomaticMigrationsEnabled

 &
=

' (
false

) .
;

. /
} 	
	protected 
override 
void 
Seed  $
($ %

DataAccess% /
./ 0
MemoryGameContext0 A
contextB I
)I J
{ 	
context 
. 
	CardDecks 
. 
AddOrUpdate )
() *
x* +
=>, .
x/ 0
.0 1

CardDeckId1 ;
,; <
new 
CardDeck 
( 
) 
{ 

CardDeckId 
=  
$num! "
," #
Name 
= 
$str -
,- .
	BackImage 
= 
$str  l
,l m
NumberOfPairs !
=" #
$num$ &
,& '
} 
) 
; 
context 
. 
Cards 
. 
AddOrUpdate %
(% &
x& '
=>( *
x+ ,
., -
CardId- 3
,3 4
new 
Card 
( 
) 
{ 
CardId 
= 
$num 
, 

FrontImage 
=  
$str! l
,l m

CardDeckId 
=  
$num! "
} 
, 
new   
Card   
(   
)   
{!! 
CardId"" 
="" 
$num"" 
,"" 

FrontImage## 
=##  
$str##! l
,##l m

CardDeckId$$ 
=$$  
$num$$! "
}%% 
,%% 
new&& 
Card&& 
(&& 
)&& 
{'' 
CardId(( 
=(( 
$num(( 
,(( 

FrontImage)) 
=))  
$str))! l
,))l m

CardDeckId** 
=**  
$num**! "
}++ 
,++ 
new,, 
Card,, 
(,, 
),, 
{-- 
CardId.. 
=.. 
$num.. 
,.. 

FrontImage// 
=//  
$str//! l
,//l m

CardDeckId00 
=00  
$num00! "
}11 
,11 
new22 
Card22 
(22 
)22 
{33 
CardId44 
=44 
$num44 
,44 

FrontImage55 
=55  
$str55! l
,55l m

CardDeckId66 
=66  
$num66! "
}77 
,77 
new88 
Card88 
(88 
)88 
{99 
CardId:: 
=:: 
$num:: 
,:: 

FrontImage;; 
=;;  
$str;;! l
,;;l m

CardDeckId<< 
=<<  
$num<<! "
}== 
,== 
new>> 
Card>> 
(>> 
)>> 
{?? 
CardId@@ 
=@@ 
$num@@ 
,@@ 

FrontImageAA 
=AA  
$strAA! l
,AAl m

CardDeckIdBB 
=BB  
$numBB! "
}CC 
,CC 
newDD 
CardDD 
(DD 
)DD 
{EE 
CardIdFF 
=FF 
$numFF 
,FF 

FrontImageGG 
=GG  
$strGG! l
,GGl m

CardDeckIdHH 
=HH  
$numHH! "
}II 
,II 
newJJ 
CardJJ 
(JJ 
)JJ 
{KK 
CardIdLL 
=LL 
$numLL 
,LL 

FrontImageMM 
=MM  
$strMM! l
,MMl m

CardDeckIdNN 
=NN  
$numNN! "
}OO 
,OO 
newPP 
CardPP 
(PP 
)PP 
{QQ 
CardIdRR 
=RR 
$numRR 
,RR  

FrontImageSS 
=SS  
$strSS! m
,SSm n

CardDeckIdTT 
=TT  
$numTT! "
}UU 
,UU 
newVV 
CardVV 
(VV 
)VV 
{WW 
CardIdXX 
=XX 
$numXX 
,XX  

FrontImageYY 
=YY  
$strYY! m
,YYm n

CardDeckIdZZ 
=ZZ  
$numZZ! "
}[[ 
)\\ 
;\\ 
}]] 	
}^^ 
}__ ˛
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *Ä
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\AccountRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
AccountRepository "
:# $

Repository% /
</ 0
Account0 7
>7 8
,8 9
IAccountRepository: L
{		 
public

 
MemoryGameContext

  
MemoryGameContext

! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
AccountRepository  
(  !
	DbContext! *
context+ 2
)2 3
:4 5
base6 :
(: ;
context; B
)B C
{D E
}F G
public 
Account $
GetAccountWithPlayerInfo /
(/ 0
string0 6
username7 ?
)? @
{ 	

IQueryable 
< 
Account 
> 
accountsRetrieved  1
=2 3
MemoryGameContext4 E
.E F
AccountsF N
.N O
WhereO T
(T U
accountU \
=>] _
account` g
.g h
Usernameh p
==q s
usernamet |
)| }
;} ~
if 
( 
accountsRetrieved !
!=" $
null% )
)) *
{ 
Account 
account 
=  !
accountsRetrieved" 3
.3 4
First4 9
(9 :
): ;
;; <
return 
account 
; 
} 
return 
null 
; 
} 	
public 
IEnumerable 
< 
Account "
>" #-
!GetNumberOfAccountsWithPlayerInfo$ E
(E F
intF I)
numberOfAccountsToBeRetrievedJ g
)g h
{   	
IEnumerable!! 
<!! 
Account!! 
>!!  
accounts!!! )
=!!* +
new!!, /
List!!0 4
<!!4 5
Account!!5 <
>!!< =
(!!= >
)!!> ?
;!!? @
IEnumerable"" 
<"" 
Account"" 
>""  
accountsRetrieved""! 2
=""3 4
MemoryGameContext""5 F
.""F G
Accounts""G O
.""O P
Include""P W
(""W X
$str""X `
)""` a
;""a b
if## 
(## 
accountsRetrieved##  
!=##! #
null##$ (
)##( )
{$$ 
accounts%% 
=%% 
accountsRetrieved%% ,
.%%, -
OrderByDescending%%- >
(%%> ?
account%%? F
=>%%G I
account%%J Q
.%%Q R
Player%%R X
.%%X Y
Score%%Y ^
)%%^ _
.&& 
Take&& 
(&& )
numberOfAccountsToBeRetrieved&& 7
)&&7 8
;&&8 9
}'' 
return(( 
accounts(( 
;(( 
})) 	
}** 
}++ ø
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\CardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
CardDeckRepository #
:$ %

Repository& 0
<0 1
CardDeck1 9
>9 :
,: ;
ICardDeckRepository< O
{		 
public

 
MemoryGameContext

  
MemoryGameContext

! 2
{ 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
CardDeckRepository !
(! "
	DbContext" +
context, 3
)3 4
:5 6
base7 ;
(; <
context< C
)C D
{E F
}G H
public 
CardDeck 
GetCardDeckAndCards +
(+ ,
int, /

cardDeckId0 :
): ;
{ 	
IEnumerable 
< 
CardDeck  
>  !
cardDecksRetrieved" 4
=5 6
MemoryGameContext7 H
.H I
	CardDecksI R
.R S
IncludeS Z
(Z [
$str[ b
)b c
. 
Where 
( 
cardDeck 
=>  "
cardDeck# +
.+ ,

CardDeckId, 6
==7 9

cardDeckId: D
)D E
;E F
if 
( 
cardDecksRetrieved "
." #
Any# &
(& '
)' (
)( )
{ 
CardDeck )
cardDeckRetrievedFromDatabase 6
=7 8
cardDecksRetrieved9 K
.K L
FirstL Q
(Q R
)R S
;S T
return )
cardDeckRetrievedFromDatabase 4
;4 5
} 
return 
null 
; 
} 	
}   
}!! á
[C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IAccountRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IAccountRepository '
:( )
IRepository* 5
<5 6
Account6 =
>= >
{ 
Account $
GetAccountWithPlayerInfo (
(( )
string) /
username0 8
)8 9
;9 :
IEnumerable		 
<		 
Account		 
>		 -
!GetNumberOfAccountsWithPlayerInfo		 >
(		> ?
int		? B)
numberOfAccountsToBeRetrieved		C `
)		` a
;		a b
}

 
} °
\C:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\ICardDeckRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
ICardDeckRepository (
:) *
IRepository+ 6
<6 7
CardDeck7 ?
>? @
{ 
CardDeck 
GetCardDeckAndCards $
($ %
int% (

cardDeckId) 3
)3 4
;4 5
} 
}		 Ö
ZC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IPlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IPlayerRepository &
:' (
IRepository) 4
<4 5
Entities5 =
.= >
Player> D
>D E
{ 
IEnumerable 
< 
Entities 
. 
Player #
># $#
GetPlayersWithBestScore% <
(< =
int= @(
numberOfPlayersToBeRetrievedA ]
)] ^
;^ _
void		 *
UpdateScoreOfPlayersAfterMatch		 +
(		+ ,
string		, 2
username		3 ;
,		; <
int		= @
score		A F
)		F G
;		G H
Player

  
FindPlayerByUsername

 #
(

# $
string

$ *
username

+ 3
)

3 4
;

4 5
} 
} ˆ
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\IRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

	interface 
IRepository  
<  !
TEntity! (
>( )
where* /
TEntity0 7
:8 9
class: ?
{ 
TEntity 
Get 
( 
object 
id 
) 
; 
IEnumerable		 
<		 
TEntity		 
>		 
GetAll		 #
(		# $
)		$ %
;		% &
IEnumerable

 
<

 
TEntity

 
>

 
Find

 !
(

! "
Func

" &
<

& '
TEntity

' .
,

. /
bool

0 4
>

4 5
	predicate

6 ?
)

? @
;

@ A
TEntity 
FindFirstOccurence "
(" #
Func# '
<' (
TEntity( /
,/ 0
bool1 5
>5 6
	predicate7 @
)@ A
;A B
void 
Add 
( 
TEntity 
entity 
)  
;  !
void 
AddRange 
( 
IEnumerable !
<! "
TEntity" )
>) *
entities+ 3
)3 4
;4 5
void 
Remove 
( 
TEntity 
entity "
)" #
;# $
void 
RemoveRange 
( 
IEnumerable $
<$ %
TEntity% ,
>, -
entities. 6
)6 7
;7 8
} 
} Î$
YC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\PlayerRepository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 
PlayerRepository !
:" #

Repository$ .
<. /
Player/ 5
>5 6
,6 7
IPlayerRepository8 I
{ 
public		 
MemoryGameContext		  
MemoryGameContext		! 2
{

 	
get 
{ 
return 
_context 
as  "
MemoryGameContext# 4
;4 5
} 
} 	
public 
PlayerRepository 
(  
MemoryGameContext  1
context2 9
)9 :
:: ;
base; ?
(? @
context@ G
)G H
{I J
}K L
public 
IEnumerable 
< 
Player !
>! "#
GetPlayersWithBestScore# :
(: ;
int; >(
numberOfPlayersToBeRetrieved? [
)[ \
{ 	
IEnumerable 
< 
Player 
> 
players  '
=( )
new* -
List. 2
<2 3
Player3 9
>9 :
(: ;
); <
;< =
var 
playersRetrieved  
=! "
MemoryGameContext# 4
.4 5
Players5 <
. 
Include 
( 
$str "
)" #
;# $
if 
( 
playersRetrieved 
!=  "
null# '
)' (
{ 
players 
= 
playersRetrieved *
.* +
OrderByDescending+ <
(< =
player= C
=>D F
playerG M
.M N
ScoreN S
)S T
. 
Take 
( (
numberOfPlayersToBeRetrieved 2
)2 3
;3 4
} 
return 
players 
; 
} 	
public   
void   *
UpdateScoreOfPlayersAfterMatch   2
(  2 3
string  3 9
username  : B
,  B C
int  D G
score  H M
)  M N
{!! 	
IEnumerable"" 
<"" 
Account"" 
>""  
retrievedAccounts""! 2
=""3 4
MemoryGameContext""5 F
.""F G
Accounts""G O
.""O P
Include""P W
(""W X
$str""X `
)""` a
.## 
Where## 
(## 
account## 
=>## !
account##" )
.##) *
Username##* 2
==##3 5
username##6 >
)##> ?
;##? @
if$$ 
($$ 
retrievedAccounts$$ !
.$$! "
Count$$" '
($$' (
)$$( )
==$$* ,
$num$$- .
)$$. /
{$$/ 0
Account%% 
account%% 
=%%  !
retrievedAccounts%%" 3
.%%3 4
First%%4 9
(%%9 :
)%%: ;
;%%; <
Player&& 
player&& 
=&& 
account&&  '
.&&' (
Player&&( .
;&&. /
player'' 
.'' 
Score'' 
+='' 
score''  %
;''% &
}(( 
})) 	
public++ 
Player++  
FindPlayerByUsername++ *
(++* +
string+++ 1
username++2 :
)++: ;
{,, 	
IEnumerable-- 
<-- 
Account-- 
>--  
retrievedAccounts--! 2
=--3 4
MemoryGameContext--5 F
.--F G
Accounts--G O
.--O P
Include--P W
(--W X
$str--X `
)--` a
... 
Where.. 
(.. 
account.. 
=>.. !
account.." )
...) *
Username..* 2
==..3 5
username..6 >
)..> ?
;..? @
if// 
(// 
retrievedAccounts//  
.//  !
Count//! &
(//& '
)//' (
==//) +
$num//, -
)//- .
{00 
Account11 
account11 
=11  !
retrievedAccounts11" 3
.113 4
First114 9
(119 :
)11: ;
;11; <
return22 
account22 
.22 
Player22 %
;22% &
}33 
return44 
null44 
;44 
}55 	
}66 
}77 ó/
SC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Repositories\Repository.cs
	namespace 	

DataAccess
 
. 
Repositories !
{ 
public 

class 

Repository 
< 
TEntity #
># $
:% &
IRepository' 2
<2 3
TEntity3 :
>: ;
where		 
TEntity		 
:		 
class		 
{

 
	protected 
readonly 
	DbContext $
_context% -
;- .
public 

Repository 
( 
	DbContext #
context$ +
)+ ,
{ 	
_context 
= 
context 
; 
} 	
public 
TEntity 
Get 
( 
object !
id" $
)$ %
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
Find+ /
(/ 0
id0 2
)2 3
;3 4
} 	
public 
IEnumerable 
< 
TEntity "
>" #
GetAll$ *
(* +
)+ ,
{ 	
return 
_context 
. 
Set 
<  
TEntity  '
>' (
(( )
)) *
.* +
ToList+ 1
(1 2
)2 3
;3 4
} 	
public 
IEnumerable 
< 
TEntity "
>" #
Find$ (
(( )
Func) -
<- .
TEntity. 5
,5 6
bool7 ;
>; <
	predicate= F
)F G
{ 	
IEnumerable 
< 
TEntity 
>  
matchingResults! 0
=1 2
new3 6
List7 ;
<; <
TEntity< C
>C D
(D E
)E F
;F G
if 
( 
	predicate 
!= 
null !
)! "
{ 
matchingResults   
=    !
_context  " *
.  * +
Set  + .
<  . /
TEntity  / 6
>  6 7
(  7 8
)  8 9
.  9 :
Where  : ?
(  ? @
	predicate  @ I
)  I J
;  J K
}!! 
return"" 
matchingResults"" "
;""" #
}## 	
public%% 
TEntity%% 
FindFirstOccurence%% )
(%%) *
Func%%* .
<%%. /
TEntity%%/ 6
,%%6 7
bool%%8 <
>%%< =
	predicate%%> G
)%%G H
{&& 	
IEnumerable'' 
<'' 
TEntity'' 
>''  
results''! (
='') *
_context''+ 3
.''3 4
Set''4 7
<''7 8
TEntity''8 ?
>''? @
(''@ A
)''A B
.''B C
Where''C H
(''H I
	predicate''I R
)''R S
;''S T
if(( 
((( 
results(( 
.(( 
Any(( 
((( 
)(( 
)(( 
{)) 
return** 
results** 
.** 
First** $
(**$ %
)**% &
;**& '
}++ 
return,, 
null,, 
;,, 
}-- 	
public// 
void// 
Add// 
(// 
TEntity// 
entity//  &
)//& '
{00 	
if11 
(11 
entity11 
!=11 
null11 
)11 
{22 
_context33 
.33 
Set33 
<33 
TEntity33 $
>33$ %
(33% &
)33& '
.33' (
Add33( +
(33+ ,
entity33, 2
)332 3
;333 4
}44 
}55 	
public77 
void77 
AddRange77 
(77 
IEnumerable77 (
<77( )
TEntity77) 0
>770 1
entities772 :
)77: ;
{88 	
if99 
(99 
entities99 
!=99 
null99 
&&99  "
entities99# +
.99+ ,
Any99, /
(99/ 0
)990 1
)991 2
{:: 
_context;; 
.;; 
Set;; 
<;; 
TEntity;; $
>;;$ %
(;;% &
);;& '
.;;' (
AddRange;;( 0
(;;0 1
entities;;1 9
);;9 :
;;;: ;
}<< 
}== 	
public?? 
void?? 
Remove?? 
(?? 
TEntity?? "
entity??# )
)??) *
{@@ 	
ifAA 
(AA 
entityAA 
!=AA 
nullAA 
)AA 
{BB 
_contextCC 
.CC 
SetCC 
<CC 
TEntityCC $
>CC$ %
(CC% &
)CC& '
.CC' (
RemoveCC( .
(CC. /
entityCC/ 5
)CC5 6
;CC6 7
}DD 
}EE 	
publicGG 
voidGG 
RemoveRangeGG 
(GG  
IEnumerableGG  +
<GG+ ,
TEntityGG, 3
>GG3 4
entitiesGG5 =
)GG= >
{HH 	
ifII 
(II 
entitiesII 
!=II 
nullII 
&&II  "
entitiesII# +
.II+ ,
AnyII, /
(II/ 0
)II0 1
)II1 2
{JJ 
_contextKK 
.KK 
SetKK 
<KK 
TEntityKK $
>KK$ %
(KK% &
)KK& '
.KK' (
RemoveRangeKK( 3
(KK3 4
entitiesKK4 <
)KK< =
;KK= >
}LL 
}MM 	
}NN 
}OO ü
UC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\IUnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 
IPlayerRepository		 
Players		 !
{		" #
get		$ '
;		' (
}		) *
ICardDeckRepository

 
	CardDecks

 %
{

& '
get

( +
;

+ ,
}

- .
IRepository 
< 
Match 
> 
Matches "
{# $
get% (
;( )
}* +
IAccountRepository 
Accounts #
{$ %
get& )
;) *
}+ ,
int 
Complete 
( 
) 
; 
} 
} ö
TC:\Users\Adair Hern√°ndez\source\repos\memory\DataAccess\Units of work\UnitOfWork.cs
	namespace 	

DataAccess
 
. 
Units_of_work "
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly 
MemoryGameContext *
_context+ 3
;3 4
public		 
IPlayerRepository		  
Players		! (
{		) *
get		+ .
;		. /
private		0 7
set		8 ;
;		; <
}		= >
public

 
ICardDeckRepository

 "
	CardDecks

# ,
{

- .
get

/ 2
;

2 3
private

4 ;
set

< ?
;

? @
}

A B
public 
IRepository 
< 
Match  
>  !
Matches" )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public 
IAccountRepository !
Accounts" *
{+ ,
get- 0
;0 1
private2 9
set: =
;= >
}? @
public 

UnitOfWork 
( 
MemoryGameContext +
context, 3
)3 4
{ 	
_context 
= 
context 
; 
Players 
= 
new 
PlayerRepository *
(* +
_context+ 3
)3 4
;4 5
	CardDecks 
= 
new 
CardDeckRepository .
(. /
_context/ 7
)7 8
;8 9
Matches 
= 
new 

Repository $
<$ %
Match% *
>* +
(+ ,
_context, 4
)4 5
;5 6
Accounts 
= 
new 
AccountRepository ,
(, -
_context- 5
)5 6
;6 7
} 	
public 
int 
Complete 
( 
) 
{ 	
return 
_context 
. 
SaveChanges '
(' (
)( )
;) *
} 	
public 
void 
Dispose 
( 
) 
{ 	
_context   
.   
Dispose   
(   
)   
;   
}!! 	
}"" 
}## 